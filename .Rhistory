fixed[[s]] <- f %>% bind_rows(.id = "horizon") %>%
mutate(horizon = recode(horizon, `1` = "short", `2` = "long"))
}
horizon_params <- params %>% bind_rows(.id = "session")
# here we also recode but only reward
horizon_params$estimate[horizon_params$predictor == "delta_mean"] <- -1* horizon_params$estimate[horizon_params$predictor == "delta_mean"]
horizon_fixed <- fixed %>% bind_rows(.id = "session")
View(horizon_fixed)
horizon_fixed <- fixed %>% bind_rows(.id = "session")
horizon_fixed$row_names <- rownames(horizon_fixed)
horizon_fixed <- horizon_fixed %>%
mutate(Estimate = if_else(str_detect(row_names, "delta_mean"), -1 * Estimate, Estimate),
`l-95% CI` = if_else(str_detect(row_names, "delta_mean"), -1 * `u-95% CI`, `l-95% CI`),
`u-95% CI` = if_else(str_detect(row_names, "delta_mean"), -1 * `l-95% CI`, `u-95% CI`)) %>%
subset(-row_names)
horizon_fixed <- fixed %>% bind_rows(.id = "session")
horizon_fixed$row_names <- rownames(horizon_fixed)
horizon_fixed <- horizon_fixed %>%
mutate(Estimate = if_else(str_detect(row_names, "delta_mean"), -1 * Estimate, Estimate),
`l-95% CI` = if_else(str_detect(row_names, "delta_mean"), -1 * `u-95% CI`, `l-95% CI`),
`u-95% CI` = if_else(str_detect(row_names, "delta_mean"), -1 * `l-95% CI`, `u-95% CI`)) %>%
subset(select = -row_names)
View(horizon_fixed)
params <- list(sam = sam_params, horizon = horizon_params) %>%
bind_rows(.id = "task")
params$ID <- parse_numer(rownames(params))
params$ID <- parse_number(rownames(params))
View(params)
params <- list(sam = sam_params, horizon = horizon_params) %>%
bind_rows(.id = "task")%>%
subset(select = c("predictor", "estimate", "horizon"))
params$ID <- parse_number(rownames(params))
params <- list(sam = sam_params, horizon = horizon_params) %>%
bind_rows(.id = "task")%>%
subset(select = c("predictor", "estimate", "horizon", "task"))
params$ID <- parse_number(rownames(params))
params <- list(sam = sam_params, horizon = horizon_params) %>%
bind_rows(.id = "task")%>%
subset(select = c("predictor", "estimate", "horizon", "task", "session"))
params$ID <- parse_number(rownames(params))
fixed <- list(sam = sam_fixed, horizon = horizon_fixed) %>%
bind_rows(.id = "task")
split_vec <- strsplit(rownames(fixed), "\\...")
# Extract the part before '...' which is the first element after split
fixed$predictor <- sapply(split_vec, '[', 1)
View(fixed)
## save
write.csv(params,"analysis/bandits/AllModelParameters.csv")
write.csv(fixed, "analysis/bandits/AllFixedEffects.csv")
saveRDS(params, file ="analysis/bandits/allParams.rds")
saveRDS(fixed, fil = "analysis/bandits/allFixed.rds")
rm(list = ls())
library(tidyverse)
library(ggplot2)
#library(jsonlite)
library(brms)
library(here)
theme_set(theme_classic(base_size = 14))
here()
session <- 1
source("analysis/recovery_utils.R")
se<-function(x){sd(x, na.rm = T)/sqrt(length(na.omit(x)))}
meann <- function(x){mean(x, na.rm = T)}
############### Horizon task ############
horizon <- load_and_prep_bandit_data(session)$horizon
zaller <- read.csv("/Users/kristinwitte/Library/CloudStorage/OneDrive-Personal/CPI/ExplorationReview/PrelimReliabilities/ZallerEtAl/data.csv")
View(zaller)
View(horizon)
zaller <- zaller %>%
rename(chosen = Choice,
ID = Subject,
block = Block,
trial = Trial,
info = Info,
delta_mean = delta,
reward = Outcome)
zaller$session <- 1
zaller <- read.csv("/Users/kristinwitte/Library/CloudStorage/OneDrive-Personal/CPI/ExplorationReview/PrelimReliabilities/ZallerEtAl/data.csv")
zaller <- zaller %>%
rename(chosen = Choice,
ID = Subject,
block = Block,
trial = Trial,
info = Info,
delta_mean = delta,
reward = Outcome) %>%
mutate(Horizon = recode(Horizon, 5 = -0.5, 10 = 0.5))
zaller <- zaller %>%
rename(chosen = Choice,
ID = Subject,
block = Block,
trial = Trial,
info = Info,
delta_mean = delta,
reward = Outcome) %>%
mutate(Horizon = recode(Horizon, `5` = -0.5, `10` = 0.5))
zaller$session <- 1
zaller$session <- 1
out_5 <- recovery_horizon(zaller[zaller$Horizon == -0.5, ],
model = "Wilson",
it = 4000,
no_horizon = T,
save = F)
out_5 <- recovery_horizon(zaller[zaller$Horizon == -0.5, ],
model = "Wilson",
it = 8000,
no_horizon = T,
save = F)
out_10 <- recovery_horizon(zaller[zaller$Horizon == 0.5, ],
model = "Wilson",
it = 8000,
no_horizon = T,
save = F)
out_5
out_10
params <- read.csv("analysis/bandits/AllModelParameters.csv")
View(params)
View(params)
params <- params %>%
mutate(predictor = ifelse(task == "horizon", paste(predictor, Horizon, sep = "_"), predictor)) %>%
subset(!grepl("ntercept", predictor))
params <- params %>%
mutate(predictor = ifelse(task == "horizon", paste(predictor, horizon, sep = "_"), predictor)) %>%
subset(!grepl("ntercept", predictor))
params <- read.csv("analysis/bandits/AllModelParameters.csv")
params <- params %>%
subset(!grepl("ntercept", predictor))
restparams <- readRDS("analysis/bandits/analysis/bandits/4arlb-maps-hierarchical.RDS")
restparams <- readRDS("analysis/bandits/4arlb-maps-hierarchical.RDS")
View(restparams)
restparams <- restparams %>%
pivot_longer(cols = -ID, values_to = "estimate", names_to = "predictor")
restparams$session <- parse_number(restparams$predictor)
View(params)
params <- read.csv("analysis/bandits/AllModelParameters.csv")
params <- params %>%
subset(!grepl("ntercept", predictor), -c(X))
restparams <- readRDS("analysis/bandits/4arlb-maps-hierarchical.RDS")
restparams <- restparams %>%
pivot_longer(cols = -ID, values_to = "estimate", names_to = "predictor")
restparams$session <- parse_number(restparams$predictor)
restparams$horizon <- NA
restparams$task <- "restless"
params <- list(params, restparams) %>%
bind_rows()
table(params$task)
params <- read.csv("analysis/bandits/AllModelParameters.csv")
params <- params %>%
subset(!grepl("ntercept", predictor), -c(X))
restparams <- readRDS("analysis/bandits/4arlb-maps-hierarchical.RDS")
restparams <- restparams %>%
pivot_longer(cols = -ID, values_to = "estimate", names_to = "predictor")
restparams$session <- parse_number(restparams$predictor)
restparams$horizon <- NA
restparams$task <- "restless"
params <- list(params, restparams) %>%
bind_rows() %>%
pivot_wider(names_from = "session", values_from = "estimate", id_cols = c("ID", "task", "predictor", "horizon"))
cors <- params %>% group_by(task, predictor, horizon) %>%
summarise(cor = cor(`1`, `2`))
cors
cors <- params %>% group_by(task, predictor, horizon) %>%
summarise(cor = cor(`1`, `2`, use = "pairwise.complete.obs"))
cors
restparams <- restparams %>%
mutate(predictor = ifelse(grepl("ru", predictor), "RU", "V"))
params <- read.csv("analysis/bandits/AllModelParameters.csv")
params <- params %>%
subset(!grepl("ntercept", predictor), -c(X))
restparams <- readRDS("analysis/bandits/4arlb-maps-hierarchical.RDS")
restparams <- restparams %>%
pivot_longer(cols = -ID, values_to = "estimate", names_to = "predictor")
restparams$session <- parse_number(restparams$predictor)
restparams$horizon <- NA
restparams$task <- "restless"
restparams <- restparams %>%
mutate(predictor = ifelse(grepl("ru", predictor), "RU", "V"))
params <- list(params, restparams) %>%
bind_rows() %>%
pivot_wider(names_from = "session", values_from = "estimate", id_cols = c("ID", "task", "predictor", "horizon"))
cors <- params %>% group_by(task, predictor, horizon) %>%
summarise(cor = cor(`1`, `2`, use = "pairwise.complete.obs"))
cors
save(cors, file = "analysis/bandits/reliability_parameters.Rda")
rm(list = ls())
library(tidyverse)
library(ggplot2)
#library(jsonlite)
library(here)
theme_set(theme_classic(base_size = 14))
############ test retest reliability ###############
load("analysis/bandits/reliability_parameters.Rda")
cors <- cors %>%
mutate(predictor = recode(predictor, "delta_mean" = "V", "info" = "RU")) %>%
subset(!horizon == "short")
View(cors)
load("analysis/bandits/reliability_parameters.Rda")
View(cors)
cors <- cors %>%
mutate(predictor = recode(predictor, "delta_mean" = "V", "info" = "RU")) %>%
subset(horizon != "short")
load("analysis/bandits/reliability_parameters.Rda")
View(cors)
cors <- cors %>%
mutate(predictor = recode(predictor, "delta_mean" = "V", "info" = "RU"))
View(cors)
cors <- cors %>%
mutate(predictor = recode(predictor, "delta_mean" = "V", "info" = "RU")) %>%
subset(-c(grep("short", horizon)))
cors <- cors %>%
mutate(predictor = recode(predictor, "delta_mean" = "V", "info" = "RU")) %>%
subset(-c(grepl("short", horizon)))
cors <- cors %>%
mutate(predictor = recode(predictor, "delta_mean" = "V", "info" = "RU")) %>%
subset(-grepl("short", horizon)))
cors <- cors %>%
mutate(predictor = recode(predictor, "delta_mean" = "V", "info" = "RU")) %>%
subset(-grepl("short", horizon))
cors <- cors %>%
mutate(predictor = recode(predictor, "delta_mean" = "V", "info" = "RU")) %>%
subset(horizon != "short")
View(cors)
load("analysis/bandits/reliability_parameters.Rda")
cors <- cors %>%
mutate(predictor = recode(predictor, "delta_mean" = "V", "info" = "RU"),
horizon = ifelse(is.na(horizon), "long", horizon)) %>%
subset(horizon == "short") %>%
subset(select = -horizon)
View(cors)
load("analysis/bandits/reliability_parameters.Rda")
cors <- cors %>%
mutate(predictor = recode(predictor, "delta_mean" = "V", "info" = "RU"),
horizon = ifelse(is.na(horizon), "long", horizon))
View(cors)
cors <- cors %>%
mutate(predictor = recode(predictor, "delta_mean" = "V", "info" = "RU"),
horizon = ifelse(is.na(horizon), "long", horizon)) %>%
subset(horizon == "long") %>%
subset(select = -horizon)
View(cors)
p2 <- ggplot(df, aes(cor, predictor)) +
geom_vline(aes(xintercept = 0.5), color = "grey") +
geom_vline(aes(xintercept = 0.75), color = "grey", linetype = "dotted") +
geom_point(, size = 5) +
coord_cartesian(xlim = c(0,1))+
labs(title = "Reliability of the task measures",
x = "correlation between session 1 and session2",
y = element_blank()) +
facet_wrap(vars(task))+
theme(legend.position = "none")
p2 <- ggplot(cors, aes(cor, predictor)) +
geom_vline(aes(xintercept = 0.5), color = "grey") +
geom_vline(aes(xintercept = 0.75), color = "grey", linetype = "dotted") +
geom_point(, size = 5) +
coord_cartesian(xlim = c(0,1))+
labs(title = "Reliability of the task measures",
x = "correlation between session 1 and session2",
y = element_blank()) +
facet_wrap(vars(task))+
theme(legend.position = "none")
p2
View(cors)
p2 <- ggplot(cors, aes(cor, predictor)) +
geom_vline(aes(xintercept = 0.5), color = "grey") +
geom_vline(aes(xintercept = 0.75), color = "grey", linetype = "dotted") +
geom_point(, size = 2) +
coord_cartesian(xlim = c(0,1))+
labs(title = "Reliability of the task measures",
x = "correlation between session 1 and session2",
y = element_blank()) +
facet_wrap(vars(task))+
theme(legend.position = "none")
p2
p2 <- ggplot(cors, aes(cor, predictor)) +
geom_vline(aes(xintercept = 0.5), color = "grey") +
geom_vline(aes(xintercept = 0.75), color = "grey", linetype = "dotted") +
geom_point(, size = 2) +
coord_cartesian(xlim = c(0,1))+
labs(title = "Reliability of model parameters",
x = "correlation between session 1 and session2",
y = element_blank()) +
facet_wrap(vars(task))+
theme(legend.position = "none")
p2
params <- read.csv("analysis/bandits/AllModelParameters.csv")
View(params)
params <- read.csv("analysis/bandits/AllModelParameters.csv") %>%
mutate(predictor = recode("delta_mean" = "V", "info" = "RU"))
params <- read.csv("analysis/bandits/AllModelParameters.csv") %>%
mutate(predictor = recode(predictor, "delta_mean" = "V", "info" = "RU"))
View(params)
params <- read.csv("analysis/bandits/AllModelParameters.csv") %>%
mutate(predictor = recode(predictor, "delta_mean" = "V", "info" = "RU"),
horizon = ifelse(is.na(horizon), "long", horizon)) %>%
subset(horizon == "long" & !grepl("ntercept", predictor), -horizon)
View(params)
params <- read.csv("analysis/bandits/AllModelParameters.csv") %>%
mutate(predictor = recode(predictor, "delta_mean" = "V", "info" = "RU"),
horizon = ifelse(is.na(horizon), "long", horizon)) %>%
subset(horizon == "long" & !grepl("ntercept", predictor), -c(horizon, X))
View(params)
params <- read.csv("analysis/bandits/AllModelParameters.csv") %>%
mutate(predictor = recode(predictor, "delta_mean" = "V", "info" = "RU"),
horizon = ifelse(is.na(horizon), "long", horizon)) %>%
subset(horizon == "long" & !grepl("ntercept", predictor) & session == 1, -c(horizon, X))
params <- read.csv("analysis/bandits/AllModelParameters.csv") %>%
mutate(predictor = recode(predictor, "delta_mean" = "V", "info" = "RU"),
horizon = ifelse(is.na(horizon), "long", horizon)) %>%
subset(horizon == "long" & !grepl("ntercept", predictor) & session == 1, -c(horizon, X, session))
restparams <- restparams %>%
mutate(predictor = ifelse(grepl("ru", predictor), "RU", "V")) %>%
subset(session == 1, -session)
restparams <- readRDS("analysis/bandits/4arlb-maps-hierarchical.RDS")
restparams <- restparams %>%
pivot_longer(cols = -ID, values_to = "estimate", names_to = "predictor")
restparams$session <- parse_number(restparams$predictor)
restparams$task <- "restless"
restparams <- restparams %>%
mutate(predictor = ifelse(grepl("ru", predictor), "RU", "V")) %>%
subset(session == 1, -session)
View(params)
View(restparams)
params <- list(params, restparams) %>%
bind_rows()
View(params)
rm(list = ls())
library(tidyverse)
library(ggplot2)
#library(jsonlite)
library(brms)
library(here)
theme_set(theme_classic(base_size = 14))
here()
session <- 1
source("analysis/recovery_utils.R")
se<-function(x){sd(x, na.rm = T)/sqrt(length(na.omit(x)))}
meann <- function(x){mean(x, na.rm = T)}
############### Horizon task ############
horizon <- load_and_prep_bandit_data(session)$horizon
fit <- fit_model_horizon(horizon[horizon$Horizon == -0.5, ],
model = "Wilson",
no_horizon = T,
use_saved = T)[[1]]
simdat <- subset(horizon, Horizon == -0.5 & trial == 5, -chosen)
simdat$chosen <- predict(fit)[ ,1]
hist(simdat$chosen)
simdat$chosen <- ifelse(runif(nrow(simdat), 0, 1) > simdat$chosen, 0, 1)
fit <- brm(chosen ~ delta_mean,
data = horizon[horizon$Horizon == -0.5, ],
family = "bernoulli",
chains = 2,
cores = 2,
iter = 6000)
simdat <- subset(horizon, Horizon == -0.5 & trial == 5, -chosen)
simdat$chosen <- predict(fit)[ ,1]
hist(simdat$chosen)
simdat$chosen <- ifelse(runif(nrow(simdat), 0, 1) > simdat$chosen, 0, 1)
refit <- brm(chosen ~ delta_mean + info,
data = simdat,
family = "bernoulli",
chains = 2,
cores = 2,
iter = 6000)
fit
refit
fit <- brm(chosen ~ delta_mean,
data = horizon[horizon$Horizon == 0.5, ],
family = "bernoulli",
chains = 2,
cores = 2,
iter = 6000)
simdat <- subset(horizon, Horizon == 0.5 & trial == 5, -chosen)
simdat$chosen <- predict(fit)[ ,1]
hist(simdat$chosen)
recovery_horizon(horizon[horizon$Horizon == -0.5, ], model = "Wilson", no_horizon = T, use_saved = T)
session <- 2
############### Horizon task ############
horizon <- load_and_prep_bandit_data(session)$horizon
recovery_horizon(horizon[horizon$Horizon == -0.5, ], model = "Wilson", no_horizon = T, use_saved = T)
recovery_horizon(horizon[horizon$Horizon == 0.5, ], model = "Wilson", no_horizon = T, use_saved = T)
zaller <- read.csv("/Users/kristinwitte/Library/CloudStorage/OneDrive-Personal/CPI/ExplorationReview/PrelimReliabilities/ZallerEtAl/data.csv")
zaller <- zaller %>%
rename(chosen = Choice,
ID = Subject,
block = Block,
trial = Trial,
info = Info,
delta_mean = delta,
reward = Outcome) %>%
mutate(Horizon = recode(Horizon, `5` = -0.5, `10` = 0.5))
View(zaller)
View(horizon)
View(zaller)
View(zaller)
zaller <- read.csv("/Users/kristinwitte/Library/CloudStorage/OneDrive-Personal/CPI/ExplorationReview/PrelimReliabilities/ZallerEtAl/data.csv")
zaller <- zaller %>%
rename(chosen = Choice,
ID = Subject,
block = Block,
trial = Trial,
info = Info,
reward = Outcome) %>%
mutate(Horizon = recode(Horizon, `5` = -0.5, `10` = 0.5),
info = info/2)
zaller <- zaller %>%
group_by(ID, block) %>%
mutate(
mean_L = if_else(trial == 5, map_dbl(row, ~ mean(reward[ID == ID[.x] & block == block[.x] & chosen == 0 & trial < 5])), NA),
mean_R = if_else(trial == 5, map_dbl(row, ~ mean(reward[ID == ID[.x] & block == block[.x] & chosen == 1 & trial < 5])), NA)
) %>%
mutate(delta_mean = mean_L - mean_R)
zaller <- read.csv("/Users/kristinwitte/Library/CloudStorage/OneDrive-Personal/CPI/ExplorationReview/PrelimReliabilities/ZallerEtAl/data.csv")
zaller <- zaller %>%
rename(chosen = Choice,
ID = Subject,
block = Block,
trial = Trial,
info = Info,
reward = Outcome) %>%
mutate(Horizon = recode(Horizon, `5` = -0.5, `10` = 0.5),
info = info/2)
zaller <- zaller %>%
group_by(ID, block) %>%
rowwise() %>%
mutate(
mean_L = if_else(trial == 5, map_dbl(row, ~ mean(reward[ID == ID[.x] & block == block[.x] & chosen == 0 & trial < 5])), NA),
mean_R = if_else(trial == 5, map_dbl(row, ~ mean(reward[ID == ID[.x] & block == block[.x] & chosen == 1 & trial < 5])), NA)
) %>%
ungroup() %>%
mutate(delta_mean = mean_L - mean_R)
zaller <- zaller %>%
group_by(ID, block) %>%
rowwise() %>%
mutate(
mean_L = if_else(trial == 5, mean(reward[ID == ID & block == block & chosen == 0 & trial < 5]), NA_real_),
mean_R = if_else(trial == 5, mean(reward[ID == ID & block == block & chosen == 1 & trial < 5]), NA_real_)
) %>%
ungroup()
zaller <- zaller %>%
group_by(ID, block) %>%
rowwise() %>%
mutate(
mean_L = if_else(trial == 5, mean(reward[ID == ID & block == block & chosen == 0 & trial < 5]), NA),
mean_R = if_else(trial == 5, mean(reward[ID == ID & block == block & chosen == 1 & trial < 5]), NA)
) %>%
ungroup()
zaller <- zaller %>%
rowwise() %>%
mutate(
mean_L = if_else(trial == 5, mean(reward[ID == ID & block == block & chosen == 0 & trial < 5]), NA),
mean_R = if_else(trial == 5, mean(reward[ID == ID & block == block & chosen == 1 & trial < 5]), NA)
)
View(zaller)
zaller <- read.csv("/Users/kristinwitte/Library/CloudStorage/OneDrive-Personal/CPI/ExplorationReview/PrelimReliabilities/ZallerEtAl/data.csv")
zaller <- zaller %>%
rename(chosen = Choice,
ID = Subject,
block = Block,
trial = Trial,
info = Info,
reward = Outcome) %>%
mutate(Horizon = recode(Horizon, `5` = -0.5, `10` = 0.5),
info = info/2)
zaller <- zaller %>%
rowwise() %>%
mutate(
mean_L = if_else(trial == 5, meann(reward[ID == ID & block == block & chosen == 0 & trial < 5]), NA),
mean_R = if_else(trial == 5, meann(reward[ID == ID & block == block & chosen == 1 & trial < 5]), NA)
)
View(zaller)
zaller <- read.csv("/Users/kristinwitte/Library/CloudStorage/OneDrive-Personal/CPI/ExplorationReview/PrelimReliabilities/ZallerEtAl/data.csv")
zaller <- zaller %>%
rename(chosen = Choice,
ID = Subject,
block = Block,
trial = Trial,
info = Info,
reward = Outcome) %>%
mutate(Horizon = recode(Horizon, `5` = -0.5, `10` = 0.5),
info = info/2)
zaller$row <- 1:nrow(zaller)
zaller$mean_L[zaller$trial == 5] <- apply(as.array(zaller$row[zaller$trial == 5]), 1, function(x) meann(zaller$reward[zaller$ID == zaller$ID[x]&
zaller$block == zaller$block[x] &
zaller$chosen == 0 &
zaller$trial < 5]))
zaller$mean_R[zaller$trial == 5] <- apply(as.array(zaller$row[zaller$trial == 5]), 1, function(x) meann(zaller$reward[zaller$ID == zaller$ID[x]&
zaller$block == zaller$block[x] &
zaller$chosen == 1&
zaller$trial < 5]))
View(zaller)
zaller$session <- 1
out_5 <- recovery_horizon(zaller[zaller$Horizon == -0.5, ],
model = "Wilson",
it = 8000,
no_horizon = T,
save = F)
zaller$delta_mean <- zaller$mean_L - zaller$mean_R
zaller$session <- 1
out_5 <- recovery_horizon(zaller[zaller$Horizon == -0.5, ],
model = "Wilson",
it = 8000,
no_horizon = T,
save = F)
out_5
out_10 <- recovery_horizon(zaller[zaller$Horizon == 0.5, ],
model = "Wilson",
it = 8000,
no_horizon = T,
save = F)
out_10
out_5
out_10

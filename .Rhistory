library(tidyverse)
# set session_id to 1 or 2
# stimulus sets for all tasks are generated for that session
session_id <- 2
my_two_seeds <- c(39737632, 8567389)
setwd("/Users/kwitte/Documents/GitHub/exploration-psychometrics")
source("wm-tasks/utils-gen-stim.R")
set.seed(my_two_seeds[session_id])
################ Horizon task -----------------------------------------------
data <- read.csv("wm-tasks/ZallerEtAl.csv")
nBlocks = 81 # 1 extra for practice
nTrials = 10 # just always sample 10 trials even if it is a short horizon and the round is over after 5 trials bc simpler this way
sub <- sample(unique(data$Subject))
sub <- sample(unique(data$Subject)1,)
sub <- sample(unique(data$Subject),1)
rewards <- data.frame(block = 1:nBlocks,
reward1 = c(40, data$mu_L[data$Subject == sub & data$Trial == 1]), # their rewards are perfectly balanced, just different order for every subject
reward2 = c(60, data$mu_R[data$Subject == sub & data$Trial == 1]),
infoCond = c(-1, data$Info[data$Subject == sub & data$Trial == 1]), # stealing infoCond and Horizon from Zaller et al. bc it is a pain to get it as perfectly orthogonal as they did without having a pattern
Horizon = c(10, data$Horizon[data$Subject == sub & data$Trial == 1]))
noise_var <- 17 # variance inferred from dataset by Zaller et al
## save rewards
ls = list()
for (i in 1:nBlocks){
block = list()
for (j in 1:nTrials){
re <- c(round(rewards$reward1[rewards$block == i] + rnorm(1,0,sqrt(noise_var))), round(rewards$reward2[rewards$block == i]+ rnorm(1,0,sqrt(noise_var))))
block[[j]] <- re
}
ls[[i]] <- block
}
library(jsonlite)
json = toJSON(ls)
write(json, paste("task/rewardsHorizon", session_id,".json", sep = ""))
fixed <- list()
for (i in 1:nBlocks){
if (rewards$infoCond[rewards$block == i] == -1){ # right more info
choices <- c(0,1,1,1)
} else if (rewards$infoCond[rewards$block == i] == 0){# equal info
choices <- c(1,1,0,0)
}else if (rewards$infoCond[rewards$block == i] == 1){# left more info
choices <- c(0,0,0,1)
}
fixed[[i]] <- choices[shuffle(4)]
}
library(permute)
for (i in 1:nBlocks){
if (rewards$infoCond[rewards$block == i] == -1){ # right more info
choices <- c(0,1,1,1)
} else if (rewards$infoCond[rewards$block == i] == 0){# equal info
choices <- c(1,1,0,0)
}else if (rewards$infoCond[rewards$block == i] == 1){# left more info
choices <- c(0,0,0,1)
}
fixed[[i]] <- choices[shuffle(4)]
}
json = toJSON(fixed)
write(json, paste("task/fixedChoices", session_id,".json", sep = ""))
## save horizon
horizon <- rewards$Horizon
json = toJSON(horizon)
write(json, paste("task/Horizon", session_id,".json", sep = ""))

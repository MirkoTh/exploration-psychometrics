}
### P(switch)
Pswitch <- switch %>%
pivot_wider(id_cols = ID, names_from = model, values_from = Pswitch) %>%
self_cor() %>%
relabel()
swi <- heatmap(Pswitch) +
labs(title = "P(switch)",
x = element_blank(),
y = element_blank())+
theme(legend.position = "none")
swi
### WM
wm <- readRDS("analysis/4arlb-overviewAll.rds") %>%
subset(session == 1, select = c(ID,OS_recall, SS_recall, WMU_recall)) %>%
self_cor() %>%
mutate(x = factor(x, levels = c("OS_recall", "SS_recall", "WMU_recall"),
labels = c("Oper. span", "Sym. span", "Updating")),
y = factor(y, levels = c("WMU_recall", "SS_recall", "OS_recall"),
labels = c("Updating", "Symmetry span", "Operation span")))
WM <- heatmap(wm) +
labs(title = "Working Memory",
x = element_blank(),
y = element_blank())+
theme(legend.position = "none")
WM
task_based <- ggarrange(swi, WM, ncol = 1, nrow = 2, labels = c("B", "C"), align = "hv")
task_based
### model parameters
cors <- readRDS("analysis/bandits/allParams.Rds") %>%
subset(predictor != "Intercept" & session == 1) %>%
mutate(predictor = recode(predictor,
"V" = "Value-guided",
"RU" = "Directed",
"VTU" = "Random",
"delta_mean" = "Value-guided",
"info" = "Directed"),
task = recode(task, "sam" = "Two-armed",
"horizon" = "Horizon",
"restless" = "Restless"),
variable = paste(predictor, task)) %>%
pivot_wider(id_cols = "ID", names_from = "variable", values_from = "estimate") %>%
self_cor() %>%
mutate(x = factor(x, levels = c("Value-guided Horizon", "Value-guided Two-armed", "Value-guided Restless",
"Directed Horizon", "Directed Two-armed", "Directed Restless",
"Random Two-armed"),
labels = c("Value-guided Horizon", "Value-guided Two-armed", "Value-guided Restless",
"Directed Horizon", "Directed Two-armed", "Directed Restless",
"Random Two-armed")),
y = factor(y, levels = c("Random Two-armed", "Directed Restless", "Directed Two-armed", "Directed Horizon",
"Value-guided Restless", "Value-guided Two-armed", "Value-guided Horizon")))
param_based <- heatmap(cors) +
labs(title = "Parameter estimates",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))+
geom_hline(yintercept = 1.5, color = "white", size = 3)+
geom_hline(yintercept = 4.5, color = "white", size = 3)+
geom_vline(xintercept = 6.5, color = "white", size = 3)+
geom_vline(xintercept = 3.5, color = "white", size = 3)+
theme(legend.position = "none")
param_based <- ggarrange(param_based, labels = c("D"))
converge <- ggarrange(task_based, param_based, ncol = 2, widths = c(2,3))
converge
save_my_pdf_and_tiff_and_png(converge,
str_c(my_dir, "/convergence_default"),
w = 12,
h = 5)
#ggsave("plots/submission1/convergent_validity_parameters.png")
# 1.5. Variable Correlations --------------------------------------------------
load("analysis/external_validity_cors_session2.Rda")
cors$y <- row.names(cors)
cors <- cors %>%
pivot_longer(cols = -y, names_to = "x", values_to = "cor") %>%
mutate(x = recode(x,
"CEI" = "Exploration",
"BIG_5" = "Openness",
"STICSAcog" = "Cognitive anxiety",
"STICSAsoma" = "Somatic anxiety",
"PHQ_9" = "Depression",
"PANASneg" = "Negative mood",
"PANASpos" = "Positive mood",
"OS_recall_1" = "Operation span",
"SS_recall_1" = "Symmetry span",
"WMU_recall_1" = "Updating"
),
y = recode(y,
"restless_V" = "Value-guided restless",
"restless_RU" = "Directed restless",
"restless_Pswitch" = "P(switch) restless",
"restless_Poptimal" = "P(optimal) restless",
"horizon_Pswitch" = "P(switch) horizon",
"horizon_Poptimal" = "P(optimal) horizon",
"horizon_info" = "Directed horizon",
"horizon_delta_mean" = "Value-guided horizon",
"2AB_VTU" = "Random 2AB",
"2AB_V" = "Value-guided 2AB",
"2AB_RU" = "Directed 2AB",
"2AB_Pswitch" = "P(switch) 2AB",
"2AB_Poptimal" = "P(optimal) 2AB",
))
cors$y <- factor(cors$y, levels = c("Random 2AB", "Directed restless","Directed 2AB","Directed horizon",
"Value-guided restless", "Value-guided 2AB", "Value-guided horizon",
"P(switch) restless", "P(switch) 2AB","P(switch) horizon",
"P(optimal) restless", "P(optimal) 2AB", "P(optimal) horizon"))
cors$x  <-  factor(cors$x, levels = c("Exploration", "Openness",
"Cognitive anxiety", "Somatic anxiety", "Depression",
"Negative mood", "Positive mood",
"Operation span", "Symmetry span", "Updating"))
ext_validty <- heatmap(cors) + labs(title = "Correlation of task measures and questionnaire scores",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))
ext_validty
save_my_pdf_and_tiff_and_png(ext_validty,
str_c(my_dir, "/external_validity_default"),
h= 6,
w = 12)
ext_validty <- ext_validty +theme(legend.position = "bottom")
ext_validty <- ggarrange(ext_validty, ncol = 1, labels = c("E"))
rel_conv_default <- ggarrange(pl_rel, converge, ext_validty, ncol = 1, nrow = 3,
heights = c(1.5,2,3))
rel_conv_default
save_my_pdf_and_tiff_and_png(rel_conv_default,
str_c(my_dir, "/reliability_convergence_default"),
h = 14,
w = 10)
## Horizon task -----------------------
horizon <- load_and_prep_bandit_data(session = 1)$horizon
res_list <- recovery_horizon(horizon[horizon$Horizon == 0.5, ], "Wilson", full = T, it = 8000, save = T, bayesian = T, no_horizon = T, no_intercept = F, use_saved = T)
trueParams <- res_list[[1]]
recoveredParams <- res_list[[2]]
# Calculate correlations
params <- unique(trueParams$predictor)
cors <- expand.grid(true = params, recovered = params)
cors$cor <- mapply(function(t, r) cor(trueParams$estimate[trueParams$predictor == t], recoveredParams$estimate[recoveredParams$predictor == r]), cors$true, cors$recovered)
cors <- cors %>%
mutate(recovered = factor(recovered, levels = c("info", "delta_mean", "Intercept"),
labels = c("Directed", "Value-guided", "Intercept")),
true = factor(true, levels = c("Intercept", "delta_mean", "info"),
labels = c("Intercept", "Value-guided", "Directed"))) %>%
subset(recovered != "Intercept" & true != "Intercept")
p1 <- heatmap(cors, x = cors$true, y = cors$recovered) +
labs(title = "Horizon task",
x = "Fitted parameters",
y = "Recovered parameters")
p1
## two-armed bd ------------------------------------
sam <- load_and_prep_bandit_data(session = 1)$sam
load("analysis/bandits/modellingResults/recoverySamSession1UCB_hierarchical_notIterative.Rda")
cors <- cors %>%
mutate(recovered = factor(recovered, levels = c("RU", "V", "Intercept"),
labels = c("Directed", "Value-guided", "Intercept")),
true = factor(true, levels = c("Intercept", "V", "RU"),
labels = c("Intercept", "Value-guided", "Directed"))) %>%
subset(recovered != "Intercept" & true != "Intercept")
p2 <- heatmap(cors, x = cors$true, y = cors$recovered) +
labs(title = "Two-armed bandit task",
x = "Fitted parameters",
y = "Recovered parameters")
p2
recovery <- ggarrange(p1, p2, ncol = 2, labels = "AUTO", common.legend = T, legend = "right")
recovery
fixed <- readRDS("analysis/bandits/allFixed_improved.rds") %>%
mutate(predictor = recode(predictor, "delta_mean" = "Value-guided",
"info" = "Directed",
"V" = "Value-guided",
"RU" = "Directed",
"VTU" = "Random"),
task = recode(task, "sam" = "Two-armed", "horizon" = "Horizon", "restless" = "Restless"),
session = recode(session, `1` = "Session 1", `2` = "Session 2"))  %>%
subset(!grepl("ntercept", predictor) & task != "Restless")
fixed$predictor <- factor(fixed$predictor, levels = c("Value-guided", "Directed", "Random"))
fixed$task <- factor(fixed$task, levels = c("Horizon", "Two-armed"))
rep <- ggplot(fixed, aes(predictor, Estimate,fill = predictor)) + geom_col()+
geom_errorbar(aes(ymin = `l-95% CI`, ymax = `u-95% CI`), width = 0.25)+
scale_fill_brewer(palette  = "Set2") +
facet_grid(rows = vars(task), cols =vars(session), scales = "free")+
theme(legend.position = "none",
strip.background = element_rect(fill = "white"),
axis.text.x = element_text(angle = 25, hjust = 1)) +
labs(title = "Fixed effects across tasks and sessions",
x = element_blank(),
y = "Parameter estimate Â± 95% CI")+
geom_hline(yintercept = 0, linetype = "dotdash")
rep
save_my_pdf_and_tiff_and_png(rep, str_c(my_dir, "/replicability_improved"),
w = 6,
h = 5)
recov_rep <- ggarrange(p1, p2, rep, ncol = 3, labels = "AUTO", common.legend = T, legend = "bottom")
recov_rep
save_my_pdf_and_tiff_and_png(recov_rep,
str_c(my_dir, "/replicability_recovery_improved"),
w = 15,
h = 5)
tbl_reliability_bandits <- readRDS("analysis/bandits/reliabilities-ucb.csv")
levels(tbl_reliability_bandits$parameter) = c("Intercept", "Value-Guided", "Directed", "Regret", "p(optimal)", "p(switch)")
levels(tbl_reliability_bandits$task) <- c("Horizon", "Two-Armed", "Restless")
pl_rel <- ggplot(tbl_reliability_bandits %>% filter(parameter != "Intercept" & measure != "Task Measure" & task != "Restless"), aes(value, fct_rev(parameter))) +
geom_rect(aes(xmin = 0, xmax = .5, ymin = 0, ymax = 2.5), fill = "tomato3", alpha = .2) +
geom_rect(aes(xmin = .5, xmax = .75, ymin = 0, ymax = 2.5), fill = "orange", alpha = .2) +
geom_rect(aes(xmin = .75, xmax = .9, ymin = 0, ymax = 2.5), fill = "lightgreen", alpha = .2) +
geom_rect(aes(xmin = .9, xmax = 1, ymin = 0, ymax = 2.5), fill = "darkgreen", alpha = .2) +
geom_point(aes(shape = measure), size = 3, color = "black") +
facet_wrap(~ task) +
coord_cartesian(xlim = c(0, 1)) +
labs(title = "Test-Retest Reliability", x = "ICC3(C,1)", y = "") +
scale_x_continuous(expand = c(0, 0), breaks = seq(0, .8, by = .2)) +
scale_y_discrete(expand = c(0.025, 0)) +
theme(
strip.background = element_rect(fill = "white"),
legend.position = "none",
axis.text.x = element_text(angle = 40, hjust = .95, vjust = .95)
) +
scale_shape_manual(values = c(16, 3), name = "")
pl_rel
cors <- readRDS("analysis/bandits/allParams_improved.Rds") %>%
subset(predictor != "Intercept" & session == 1) %>%
mutate(predictor = recode(predictor,
"V" = "Value-guided",
"RU" = "Directed",
"delta_mean" = "Value-guided",
"info" = "Directed"),
task = recode(task, "sam" = "Two-armed",
"horizon" = "Horizon",
"restless" = "Restless"),
variable = paste(predictor, task)) %>%
pivot_wider(id_cols = "ID", names_from = "variable", values_from = "estimate") %>%
self_cor() %>%
mutate(x = factor(x, levels = c("Value-guided Horizon", "Value-guided Two-armed", "Value-guided Restless",
"Directed Horizon", "Directed Two-armed", "Directed Restless"),
labels = c("Value-guided Horizon", "Value-guided Two-armed", "Value-guided Restless",
"Directed Horizon", "Directed Two-armed", "Directed Restless")),
y = factor(y, levels = c("Directed Restless", "Directed Two-armed", "Directed Horizon",
"Value-guided Restless", "Value-guided Two-armed", "Value-guided Horizon")))
converge <- heatmap(cors) +
labs(title = "Convergent validity of parameter estimates",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))+
geom_hline(yintercept = 3.5, color = "white", size = 3)+
geom_vline(xintercept = 3.5, color = "white", size = 3)
converge
cors <- read.csv("analysis/behavioral-tasks-latents-s2.csv") %>%
mutate(ID = c(2, 3, 4, 6, 7 , 10 , 11  ,12 , 13  ,14,  16 , 20  ,21 , 23 , 24,
25,  26 , 27 , 28 , 29 , 31 , 32 , 33 , 34 , 35 , 36 , 37,  40  ,
48 , 49,  52  ,55 , 56,  59 , 60 , 61 , 63 , 65 , 69 , 71,
72 , 73 , 74 , 76 , 77 , 78,  79 , 83  ,84  ,85 , 90 , 93,  94 ,
95,  96 , 97,  98  ,99 ,100, 101 ,102 ,103 ,105 ,108 ,109, 110,
113 ,114, 117, 118, 119, 120, 122, 123, 124, 125, 128 ,129, 131, 132,
133, 134, 135, 137, 142, 149 ,151, 154, 162, 163, 165, 166, 168 ,169,
170 ,171 ,172, 175 ,176, 180 ,182 ,183, 185, 187 ,188 ,190, 193 ,195,
197, 198 ,199, 200 ,202 ,203, 204, 205, 206, 207, 208, 209,
213 ,216 ,219, 220, 222, 229 ,232, 233, 239, 243, 244, 245, 246 ,251,
254, 261 ,262, 269, 270, 271, 273, 274 ,276 ,279, 284, 288, 290 ,291,
294 ,297, 298 ,299 ,302 ,303 ,306, 308, 309, 313, 316, 317,
320, 322, 323, 324, 325, 326, 332, 333, 338 ,343, 346, 347, 349, 351, 352)) %>%
left_join(read.csv("analysis/CFA_compound_questionnaire_factors_s2.csv") %>% select(-X), by = "ID") %>%
self_cor() %>%
mutate(x = factor(x, levels = c("G.Value.Guided", "G.Directed","WMC",  "Exp", "posMood", "negMood", "AxDep"),
labels = c("Value-guided", "Directed","Working memory", "Self-reported exploration","Positive mood", "Negative mood", "Anxiety/depression")),
y = factor(y, levels = c("AxDep", "negMood","posMood", "Exp","WMC", "G.Directed", "G.Value.Guided"),
labels = c("Anxiety/depression","Negative mood","Positive", "Self-reported exploration","Working memory", "Directed", "Value-guided")))
latent <- heatmap(cors) +
labs(title = "External validity on the latent level",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))+
geom_hline(yintercept = 4.5, color = "white", size = 3)+
geom_vline(xintercept = 3.5, color = "white", size = 3)
latent
conv2 <- ggarrange(converge, latent, ncol = 2, labels = c("B", "C"), common.legend = T,
legend = "bottom")
conv2
save_my_pdf_and_tiff_and_png(conv2,
str_c(my_dir, "/convergence_criterion_improved"),
w = 14,
h = 5)
#<<<<<<< Updated upstream
# Supplementary Information -----------------------------------------------
#=======
pl_rel <- ggarrange(pl_rel, ncol = 1, labels = c("A"))
rel_conv_improved <- ggarrange(pl_rel, conv2, ncol = 1, nrow = 2, heights = c(1.5,3))
rel_conv_improved
save_my_pdf_and_tiff_and_png(rel_conv_improved,
str_c(my_dir, "/reliability_convergence_improved"),
h = 8,
w = 13)
load("analysis/bandits/model_selection_horizon.Rda")
lims = c(min(c(params_t1$subject_level, params_t1$hierarchical)), max(c(params_t1$subject_level, params_t1$hierarchical)))
# Plot
ggplot(params_t1, aes(subject_level, hierarchical, color = predictor)) +
geom_jitter(alpha = 0.5) +
geom_abline(aes(slope = 1, intercept = 0)) +
coord_cartesian(xlim = lims, ylim = lims) +
geom_label(aes(x = Inf, y = -Inf, label = sprintf("cor = %.2f", cor)), hjust = "inward", vjust = "inward", color = "black") +
facet_grid(cols = vars(predictor), rows = vars(horizon))+
scale_color_manual(values = c("#66C2A5", "#FC8D62"))+
theme(strip.background = element_rect(fill = "white"),
legend.position = "none")
rm(list = ls())
library(grid)
library(gridExtra)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(brms)
library(here)
theme_set(theme_bw(base_size = 14))
source("analysis/recovery_utils.R")
se<-function(x){sd(x, na.rm = T)/sqrt(length(na.omit(x)))}
meann <- function(x){mean(x, na.rm = T)}
self_cor <- function(df){
cors <- df %>%
select(-ID) %>%
cor(use = "pairwise.complete.obs") %>%
as.data.frame() %>%
mutate(x = rownames(.)) %>%
pivot_longer(cols = -x, names_to = "y", values_to = "cor")
return(cors)
}
dirs_homegrown <- c(
"utils/analysis-utils.R", "utils/plotting-utils.R",
"utils/modeling-utils.R"
)
walk(dirs_homegrown, source)
# Which Models? ---------------------------------------------------------
my_dir <- "figures/figures-ms/submission-1"
if (!dir.exists(my_dir)){dir.create(my_dir, recursive = TRUE)}
# how did we arrive at the used models?
load("analysis/bandits/model_selection_horizon.Rda")
lims = c(min(c(params_t1$subject_level, params_t1$hierarchical)), max(c(params_t1$subject_level, params_t1$hierarchical)))
# Plot
ggplot(params_t1, aes(subject_level, hierarchical, color = predictor)) +
geom_jitter(alpha = 0.5) +
geom_abline(aes(slope = 1, intercept = 0)) +
coord_cartesian(xlim = lims, ylim = lims) +
geom_label(aes(x = Inf, y = -Inf, label = sprintf("cor = %.2f", cor)), hjust = "inward", vjust = "inward", color = "black") +
facet_grid(cols = vars(predictor), rows = vars(horizon))+
scale_color_manual(values = c("#66C2A5", "#FC8D62"))+
theme(strip.background = element_rect(fill = "white"),
legend.position = "none")
ggplot(fixed, aes(predictor, Estimate, fill = horizon)) + geom_col(position = position_dodge(0.9)) +
geom_errorbar(aes(ymin = lower, ymax = upper), position = position_dodge(0.9), width = 0.25)+
facet_wrap(vars(method)) +
scale_fill_manual(values = c("#66C2A5", "#FC8D62")) +
theme(strip.background = element_rect(fill = "white"))
cors <- params_all %>%
group_by(method, predictor, horizon) %>%
summarize(correlation = cor(session1, session2, use = "pairwise.complete.obs"))
print(cors)
print(log_liks)
View(cors)
View(fixed)
View(params_t1)
View(params_t1)
params <- params_t1 %>%
mutate(predictor = recode("delta_mean" = "value-guided",
"info" = "directed"))
params <- params_t1 %>%
mutate(predictor = recode(predictor,"delta_mean" = "value-guided",
"info" = "directed"))
View(params)
# Plot
ggplot(params, aes(subject_level, hierarchical, color = predictor)) +
geom_jitter(alpha = 0.5) +
geom_abline(aes(slope = 1, intercept = 0)) +
coord_cartesian(xlim = lims, ylim = lims) +
geom_label(aes(x = Inf, y = -Inf, label = sprintf("cor = %.2f", cor)), hjust = "inward", vjust = "inward", color = "black") +
facet_grid(cols = vars(predictor), rows = vars(horizon))+
scale_color_manual(values = c("#66C2A5", "#FC8D62"))+
theme(strip.background = element_rect(fill = "white"),
legend.position = "none") +
labs(title = "Correspondence of hierachical and subject-level estimates",
x = "subject-level")
ggplot(fixed, aes(predictor, Estimate, fill = horizon)) + geom_col(position = position_dodge(0.9)) +
geom_errorbar(aes(ymin = lower, ymax = upper), position = position_dodge(0.9), width = 0.25)+
facet_wrap(vars(method)) +
scale_fill_manual(values = c("#66C2A5", "#FC8D62")) +
theme(strip.background = element_rect(fill = "white"))
View(fixed)
View(fixed)
fi <- fixed %>%
mutate(predictor = recode(predictor, "delta_mean" = "value-guided",
"info" = "directed"),
method = recode(method, "hb" = "hierarchical",
"sl" = "subject-level"))
ggplot(fi, aes(predictor, Estimate, fill = horizon)) + geom_col(position = position_dodge(0.9)) +
geom_errorbar(aes(ymin = lower, ymax = upper), position = position_dodge(0.9), width = 0.25)+
facet_wrap(vars(method)) +
scale_fill_manual(values = c("#66C2A5", "#FC8D62")) +
theme(strip.background = element_rect(fill = "white"))
cors <- params_all %>%
group_by(method, predictor, horizon) %>%
summarize(correlation = cor(session1, session2, use = "pairwise.complete.obs"))
print(cors)
stargazer::stargazer(cors, summary = F, rownames = F)
print(log_liks)
stargazer::stargazer(log_liks, summary = F, rownames = F)
cors <- params_all %>%
group_by(method, predictor, horizon) %>%
summarize(correlation = cor(session1, session2, use = "pairwise.complete.obs")) %>%
mutate(method = recode(method, "subject_level" = "subject-level"),
predictor = recode(predictor, "delta_mean" = "value-guided",
"info" = "directed"))
print(cors)
print(log_liks)
logs <- log_liks %>%
mutate(method = recode(method, "hb" = "hierarchical",
"sl" = "subject-level"),
Horizon = recode(Horizon, "5" = "short",
"10" = "long"))
stargazer::stargazer(logs, summary = F, rownames = F)
logs <- log_liks %>%
mutate(method = recode(method, "hb" = "hierarchical",
"sl" = "subject-level"),
Horizon = recode(Horizon, "5" = "short",
"10" = "long")) %>%
rename(`Log Likelihood`= log_lik)
stargazer::stargazer(logs, summary = F, rownames = F)
load("analysis/bandits/model_selection_horizon.Rda")
lims = c(min(c(params_t1$subject_level, params_t1$hierarchical)), max(c(params_t1$subject_level, params_t1$hierarchical)))
params <- params_t1 %>%
mutate(predictor = recode(predictor,"delta_mean" = "value-guided",
"info" = "directed"))
# Plot
ggplot(params, aes(subject_level, hierarchical, color = predictor)) +
geom_jitter(alpha = 0.5) +
geom_abline(aes(slope = 1, intercept = 0)) +
coord_cartesian(xlim = lims, ylim = lims) +
geom_label(aes(x = Inf, y = -Inf, label = sprintf("cor = %.2f", cor)), hjust = "inward", vjust = "inward", color = "black") +
facet_grid(cols = vars(predictor), rows = vars(horizon))+
scale_color_manual(values = c("#66C2A5", "#FC8D62"))+
theme(strip.background = element_rect(fill = "white"),
legend.position = "none") +
labs(title = "Correspondence of hierachical and subject-level estimates",
x = "subject-level")
# Plot
sl <- ggplot(params, aes(subject_level, hierarchical, color = predictor)) +
geom_jitter(alpha = 0.5) +
geom_abline(aes(slope = 1, intercept = 0)) +
coord_cartesian(xlim = lims, ylim = lims) +
geom_label(aes(x = Inf, y = -Inf, label = sprintf("cor = %.2f", cor)), hjust = "inward", vjust = "inward", color = "black") +
facet_grid(cols = vars(predictor), rows = vars(horizon))+
scale_color_manual(values = c("#66C2A5", "#FC8D62"))+
theme(strip.background = element_rect(fill = "white"),
legend.position = "none") +
labs(title = "Correspondence of hierachical and subject-level estimates",
x = "subject-level")
fi <- fixed %>%
mutate(predictor = recode(predictor, "delta_mean" = "value-guided",
"info" = "directed"),
method = recode(method, "hb" = "hierarchical",
"sl" = "subject-level"))
fix <- ggplot(fi, aes(predictor, Estimate, fill = horizon)) + geom_col(position = position_dodge(0.9)) +
geom_errorbar(aes(ymin = lower, ymax = upper), position = position_dodge(0.9), width = 0.25)+
facet_wrap(vars(method)) +
scale_fill_manual(values = c("#66C2A5", "#FC8D62")) +
theme(strip.background = element_rect(fill = "white"))
fix
selection <- ggarrange(fix, sl, ncol = 2, labels = "AUTO")
selection
fix <- ggplot(fi, aes(predictor, Estimate, fill = horizon)) + geom_col(position = position_dodge(0.9)) +
geom_errorbar(aes(ymin = lower, ymax = upper), position = position_dodge(0.9), width = 0.25)+
facet_wrap(vars(method)) +
scale_fill_manual(values = c("#66C2A5", "#FC8D62")) +
theme(strip.background = element_rect(fill = "white"))+
labs(title = "Cprrespondence of hierarchical and subject-level fixed effects")
fix
cors <- params_all %>%
group_by(method, predictor, horizon) %>%
summarize(correlation = cor(session1, session2, use = "pairwise.complete.obs")) %>%
mutate(method = recode(method, "subject_level" = "subject-level"),
predictor = recode(predictor, "delta_mean" = "value-guided",
"info" = "directed"))
print(cors)
selection <- ggarrange(fix, sl, ncol = 2, labels = "AUTO")
selection
save_my_pdf_and_tiff_and_png(
selection,
str_c(my_dir, "/horizon_model_selection"),
14, 4
)
fix <- ggplot(fi, aes(predictor, Estimate, fill = horizon)) + geom_col(position = position_dodge(0.9)) +
geom_errorbar(aes(ymin = lower, ymax = upper), position = position_dodge(0.9), width = 0.25)+
facet_wrap(vars(method)) +
scale_fill_manual(values = c("#66C2A5", "#FC8D62")) +
theme(strip.background = element_rect(fill = "white"))+
labs(title = "Correspondence of hierarchical and subject-level fixed effects")
fix
selection <- ggarrange(fix, sl, ncol = 2, labels = "AUTO")
selection
save_my_pdf_and_tiff_and_png(
selection,
str_c(my_dir, "/horizon_model_selection"),
14, 4
)
stargazer::stargazer(cors, summary = F, rownames = F)
print(log_liks)
logs <- log_liks %>%
mutate(method = recode(method, "hb" = "hierarchical",
"sl" = "subject-level"),
Horizon = recode(Horizon, "5" = "short",
"10" = "long")) %>%
rename(`Log Likelihood`= log_lik)
stargazer::stargazer(logs, summary = F, rownames = F)
print(cors)
cors <- params_all %>%
group_by(method, predictor, horizon) %>%
summarize(correlation = cor(session1, session2, use = "pairwise.complete.obs")) %>%
mutate(method = recode(method, "subject_level" = "subject-level"),
predictor = recode(predictor, "delta_mean" = "value-guided",
"info" = "directed"),
correlation = round(correlation, digits = 2))
print(cors)
stargazer::stargazer(cors, summary = F, rownames = F)

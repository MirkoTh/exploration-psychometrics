theme(axis.text.x = element_text(angle = 30, hjust = 1))+
geom_hline(yintercept = 3.5, color = "white", size = 2)+
geom_hline(yintercept = 4.5, color = "white", size = 2)+
geom_vline(xintercept = 3.5, color = "white", size = 2)+
geom_vline(yintercept = 4.5, color = "white", size = 2)
ggplot(cors, aes(y, x, fill = cor)) + geom_raster() +
scale_fill_gradient2(high = "#66C2A5", low = "#FC8D62", mid = "white", limits = c(-1,1))+
geom_label(aes(label = round(cor, digits = 2)), fill = "white") +
labs(title = "Convergent validity of parameter estimates",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))+
geom_hline(yintercept = 3.5, color = "white", size = 2)+
geom_hline(yintercept = 4.5, color = "white", size = 2)+
geom_vline(xintercept = 3.5, color = "white", size = 2)+
geom_vline(xintercept = 4.5, color = "white", size = 2)
ggplot(cors, aes(y, x, fill = cor)) + geom_raster() +
scale_fill_gradient2(high = "#66C2A5", low = "#FC8D62", mid = "white", limits = c(-1,1))+
geom_label(aes(label = round(cor, digits = 2)), fill = "white") +
labs(title = "Convergent validity of parameter estimates",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))+
geom_hline(yintercept = 3.5, color = "white", size = 3)+
geom_hline(yintercept = 4.5, color = "white", size = 3)+
geom_vline(xintercept = 3.5, color = "white", size = 3)+
geom_vline(xintercept = 4.5, color = "white", size = 3)
cors <- readRDS("analysis/bandits/allParams.Rds") %>%
subset(predictor != "Intercept" & session == 1) %>%
mutate(predictor = recode(predictor,
"V" = "Value-guided",
"RU" = "Directed",
"VTU" = "Random",
"delta_mean" = "Value-guided",
"info" = "Directed"),
task = recode(task, "sam" = "Two-armed",
"horizon" = "Horizon",
"restless" = "Restless"),
variable = paste(predictor, task)) %>%
pivot_wider(id_cols = "ID", names_from = "variable", values_from = "estimate") %>%
subset(select = -ID) %>%
cor(use="pairwise.complete.obs") %>%
as.data.frame() %>%
mutate(x = rownames(.)) %>%
pivot_longer(cols = -x, names_to = "y", values_to = "cor")
ggplot(cors, aes(y, x, fill = cor)) + geom_raster() +
scale_fill_gradient2(high = "#66C2A5", low = "#FC8D62", mid = "white", limits = c(-1,1))+
geom_label(aes(label = round(cor, digits = 2)), fill = "white") +
labs(title = "Convergent validity of parameter estimates",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))+
geom_hline(yintercept = 3.5, color = "white", size = 3)+
geom_hline(yintercept = 4.5, color = "white", size = 3)+
geom_vline(xintercept = 3.5, color = "white", size = 3)+
geom_vline(xintercept = 4.5, color = "white", size = 3)
load("/Users/kristinwitte/Documents/GitHub/exploration-psychometrics/analysis/comprehensionWave1.Rda")
View(comprehension)
View(comprehension)
View(horizon)
cors <- readRDS("analysis/bandits/allParams.Rds")
View(cors)
cors <- readRDS("analysis/bandits/allParams.Rds") %>%
subset(predictor != "Intercept" & session == 1) %>%
pivot_wider(cols = c("predictor", "estimate"), id_cols = "ID", names_from = "predictor", values_from = "estimate")
cors <- readRDS("analysis/bandits/allParams.Rds") %>%
subset(predictor != "Intercept" & session == 1) %>%
pivot_wider( id_cols = "ID", names_from = "predictor", values_from = "estimate")
cors <- readRDS("analysis/bandits/allParams.Rds") %>%
subset(predictor != "Intercept" & session == 1)
View(comprehension)
View(cors)
cors <- readRDS("analysis/bandits/allParams.Rds") %>%
subset(predictor != "Intercept" & session == 1) %>%
pivot_wider(id_cols = c("ID", "task"), names_from = "predictor", values_from = "estimate")
View(cors)
pivot_wider(id_cols = c("ID", "task"), names_from = "variable", values_from = "estimate")
cors <- readRDS("analysis/bandits/allParams.Rds") %>%
subset(predictor != "Intercept" & session == 1) %>%
mutate(variable = paste(predictor, task)) %>%
pivot_wider(id_cols = c("ID", "task"), names_from = "variable", values_from = "estimate")
View(cors)
View(comprehension)
View(all)
View(comprehension)
cors <- readRDS("analysis/bandits/allParams.Rds") %>%
subset(predictor != "Intercept" & session == 1) %>%
mutate(variable = paste(predictor, task)) %>%
pivot_wider(id_cols = c("ID", "task"), names_from = "variable", values_from = "estimate") %>%
left_join(load("analysis/comprehensionWave1.Rda") %>% pivot_wider(id_cols = c("ID"),
names_from = "task", values_from = "compAttempts"), by = "ID")
############# correlation of parameters and comprehension attempts ################
load("analysis/comprehensionWave1.Rda") %>% pivot_wider(id_cols = c("ID"),
names_from = "task", values_from = "compAttempts")
############# correlation of parameters and comprehension attempts ################
comprehension <- load("analysis/comprehensionWave1.Rda") %>% pivot_wider(id_cols = c("ID"),
names_from = "task", values_from = "compAttempts")
############# correlation of parameters and comprehension attempts ################
load("analysis/comprehensionWave1.Rda")
cors <- readRDS("analysis/bandits/allParams.Rds") %>%
subset(predictor != "Intercept" & session == 1) %>%
mutate(variable = paste(predictor, task)) %>%
pivot_wider(id_cols = c("ID", "task"), names_from = "variable", values_from = "estimate") %>%
left_join(comprehension%>% pivot_wider(id_cols = c("ID"),
names_from = "task", values_from = "compAttempts")
, by = "ID")
View(cors)
cors <- readRDS("analysis/bandits/allParams.Rds") %>%
subset(predictor != "Intercept" & session == 1) %>%
mutate(variable = paste(predictor, task)) %>%
pivot_wider(id_cols = c("ID", "task"), names_from = "variable", values_from = "estimate") %>%
left_join(comprehension%>% pivot_wider(id_cols = c("ID"),
names_from = "task", values_from = "compAttempts")
, by = "ID") %>%
select(-ID)
cors <- readRDS("analysis/bandits/allParams.Rds") %>%
subset(predictor != "Intercept" & session == 1) %>%
mutate(variable = paste(predictor, task)) %>%
pivot_wider(id_cols = c("ID", "task"), names_from = "variable", values_from = "estimate") %>%
left_join(comprehension%>% pivot_wider(id_cols = c("ID"),
names_from = "task", values_from = "compAttempts")
, by = "ID") %>%
select(-ID) %>%
cor(use = "pairwise.complete.obs") %>%
as.data.frame() %>%
mutate(x = rownames(.)) %>%
pivot_longer(cols = -c(x), names_to = "y", values_to = "cor")
cors <- readRDS("analysis/bandits/allParams.Rds") %>%
subset(predictor != "Intercept" & session == 1) %>%
mutate(variable = paste(predictor, task)) %>%
pivot_wider(id_cols = c("ID", "task"), names_from = "variable", values_from = "estimate") %>%
left_join(comprehension%>% pivot_wider(id_cols = c("ID"),
names_from = "task", values_from = "compAttempts")
, by = "ID") %>%
select(-ID)
cors <- readRDS("analysis/bandits/allParams.Rds") %>%
subset(predictor != "Intercept" & session == 1) %>%
mutate(variable = paste(predictor, task)) %>%
pivot_wider(id_cols = c("ID", "task"), names_from = "variable", values_from = "estimate") %>%
left_join(comprehension%>% pivot_wider(id_cols = c("ID"),
names_from = "task", values_from = "compAttempts")
, by = "ID") %>%
select(-c(ID,task)) %>%
cor(use = "pairwise.complete.obs") %>%
as.data.frame() %>%
mutate(x = rownames(.)) %>%
pivot_longer(cols = -c(x), names_to = "y", values_to = "cor")
cors <- readRDS("analysis/bandits/allParams.Rds") %>%
subset(predictor != "Intercept" & session == 1) %>%
mutate(variable = paste(predictor, task)) %>%
pivot_wider(id_cols = c("ID", "task"), names_from = "variable", values_from = "estimate") %>%
left_join(comprehension%>% pivot_wider(id_cols = c("ID"),
names_from = "task", values_from = "compAttempts")
, by = "ID") %>%
select(-c(ID,task)) %>%
cor(use = "pairwise.complete.obs") %>%
as.data.frame() %>%
mutate(x = rownames(.)) %>%
pivot_longer(cols = -c(x), names_to = "y", values_to = "cor") %>%
subset(is.element(x, c("horizon", "sam", "restless")) & !is.element(y, c("horizon", "sam", "restless")))
ggplot(cors, aes(y, x, fill = cor)) + geom_raster() +
scale_fill_gradient2(high = "#66C2A5", low = "#FC8D62", mid = "white", limits = c(-1,1))+
geom_label(aes(label = round(cor, digits = 2)), fill = "white") +
labs(title = "Convergent validity of parameter estimates",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))
ggplot(cors, aes(y, x, fill = cor)) + geom_raster() +
scale_fill_gradient2(high = "#66C2A5", low = "#FC8D62", mid = "white", limits = c(-1,1))+
geom_label(aes(label = round(cor, digits = 2)), fill = "white") +
labs(title = "Correlation of model parameters and comprehension attempts",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))
############# correlation of parameters and comprehension attempts ################
load("analysis/comprehensionWave1.Rda")
cors <- readRDS("analysis/bandits/allParams.Rds")
View(comprehension)
View(cors)
cor.test(comprehension$compAttempts[comprehension$task == "restless" & is.element(comprehension$ID, cors$ID)], cors$estimate[cors$task == "restless" & cors$session == 1 & cors$predictor == "RU"])
length(comprehension$compAttempts[comprehension$task == "restless" & is.element(comprehension$ID, cors$ID)])
length(cors$estimate[cors$task == "restless" & cors$session == 1 & cors$predictor == "RU"])
ID <- cors$ID[cors$task == "restless"]
length(comprehension$compAttempts[comprehension$task == "restless" & is.element(comprehension$ID, ID)])
cor.test(comprehension$compAttempts[comprehension$task == "restless" & is.element(comprehension$ID, ID)], cors$estimate[cors$task == "restless" & cors$session == 1 & cors$predictor == "RU" & is.element(cors$ID, comprehension$ID)])
########### correlation of latent factors and comprehension attempts #########
load("analysis/comprehensionWave2.Rda")
cors <- read.csv("analysis/behavioral-tasks-latents-s2.csv") %>%
mutate(ID = c(2, 3, 4, 6, 7 , 10 , 11  ,12 , 13  ,14,  16 , 20  ,21 , 23 , 24,
25,  26 , 27 , 28 , 29 , 31 , 32 , 33 , 34 , 35 , 36 , 37,  40  ,
48 , 49,  52  ,55 , 56,  59 , 60 , 61 , 63 , 65 , 69 , 71,
72 , 73 , 74 , 76 , 77 , 78,  79 , 83  ,84  ,85 , 90 , 93,  94 ,
95,  96 , 97,  98  ,99 ,100, 101 ,102 ,103 ,105 ,108 ,109, 110,
113 ,114, 117, 118, 119, 120, 122, 123, 124, 125, 128 ,129, 131, 132,
133, 134, 135, 137, 142, 149 ,151, 154, 162, 163, 165, 166, 168 ,169,
170 ,171 ,172, 175 ,176, 180 ,182 ,183, 185, 187 ,188 ,190, 193 ,195,
197, 198 ,199, 200 ,202 ,203, 204, 205, 206, 207, 208, 209,
213 ,216 ,219, 220, 222, 229 ,232, 233, 239, 243, 244, 245, 246 ,251,
254, 261 ,262, 269, 270, 271, 273, 274 ,276 ,279, 284, 288, 290 ,291,
294 ,297, 298 ,299 ,302 ,303 ,306, 308, 309, 313, 316, 317,
320, 322, 323, 324, 325, 326, 332, 333, 338 ,343, 346, 347, 349, 351, 352))
View(cors)
left_join(comprehension%>% pivot_wider(id_cols = c("ID"),
names_from = "task", values_from = "compAttempts")
, by = "ID") %>%
select(-c(ID)) %>%
cor(use = "pairwise.complete.obs") %>%
as.data.frame() %>%
mutate(x = rownames(.)) %>%
pivot_longer(cols = -c(x), names_to = "y", values_to = "cor") %>%
subset(is.element(x, c("horizon", "sam", "restless")) & !is.element(y, c("horizon", "sam", "restless")))
########### correlation of latent factors and comprehension attempts #########
load("analysis/comprehensionWave2.Rda")
cors <- read.csv("analysis/behavioral-tasks-latents-s2.csv") %>%
mutate(ID = c(2, 3, 4, 6, 7 , 10 , 11  ,12 , 13  ,14,  16 , 20  ,21 , 23 , 24,
25,  26 , 27 , 28 , 29 , 31 , 32 , 33 , 34 , 35 , 36 , 37,  40  ,
48 , 49,  52  ,55 , 56,  59 , 60 , 61 , 63 , 65 , 69 , 71,
72 , 73 , 74 , 76 , 77 , 78,  79 , 83  ,84  ,85 , 90 , 93,  94 ,
95,  96 , 97,  98  ,99 ,100, 101 ,102 ,103 ,105 ,108 ,109, 110,
113 ,114, 117, 118, 119, 120, 122, 123, 124, 125, 128 ,129, 131, 132,
133, 134, 135, 137, 142, 149 ,151, 154, 162, 163, 165, 166, 168 ,169,
170 ,171 ,172, 175 ,176, 180 ,182 ,183, 185, 187 ,188 ,190, 193 ,195,
197, 198 ,199, 200 ,202 ,203, 204, 205, 206, 207, 208, 209,
213 ,216 ,219, 220, 222, 229 ,232, 233, 239, 243, 244, 245, 246 ,251,
254, 261 ,262, 269, 270, 271, 273, 274 ,276 ,279, 284, 288, 290 ,291,
294 ,297, 298 ,299 ,302 ,303 ,306, 308, 309, 313, 316, 317,
320, 322, 323, 324, 325, 326, 332, 333, 338 ,343, 346, 347, 349, 351, 352)) %>%
left_join(comprehension%>% pivot_wider(id_cols = c("ID"),
names_from = "task", values_from = "compAttempts")
, by = "ID") %>%
select(-c(ID)) %>%
cor(use = "pairwise.complete.obs") %>%
as.data.frame() %>%
mutate(x = rownames(.)) %>%
pivot_longer(cols = -c(x), names_to = "y", values_to = "cor") %>%
subset(is.element(x, c("horizon", "sam", "restless")) & !is.element(y, c("horizon", "sam", "restless")))
View(cors)
ggplot(cors, aes(y, x, fill = cor)) + geom_raster() +
scale_fill_gradient2(high = "#66C2A5", low = "#FC8D62", mid = "white", limits = c(-1,1))+
geom_label(aes(label = round(cor, digits = 2)), fill = "white") +
labs(title = "Correlation of model parameters and comprehension attempts",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))
load("analysis/comprehensionWave2.Rda")
df <- read.csv("analysis/behavioral-tasks-latents-s2.csv") %>%
mutate(ID = c(2, 3, 4, 6, 7 , 10 , 11  ,12 , 13  ,14,  16 , 20  ,21 , 23 , 24,
25,  26 , 27 , 28 , 29 , 31 , 32 , 33 , 34 , 35 , 36 , 37,  40  ,
48 , 49,  52  ,55 , 56,  59 , 60 , 61 , 63 , 65 , 69 , 71,
72 , 73 , 74 , 76 , 77 , 78,  79 , 83  ,84  ,85 , 90 , 93,  94 ,
95,  96 , 97,  98  ,99 ,100, 101 ,102 ,103 ,105 ,108 ,109, 110,
113 ,114, 117, 118, 119, 120, 122, 123, 124, 125, 128 ,129, 131, 132,
133, 134, 135, 137, 142, 149 ,151, 154, 162, 163, 165, 166, 168 ,169,
170 ,171 ,172, 175 ,176, 180 ,182 ,183, 185, 187 ,188 ,190, 193 ,195,
197, 198 ,199, 200 ,202 ,203, 204, 205, 206, 207, 208, 209,
213 ,216 ,219, 220, 222, 229 ,232, 233, 239, 243, 244, 245, 246 ,251,
254, 261 ,262, 269, 270, 271, 273, 274 ,276 ,279, 284, 288, 290 ,291,
294 ,297, 298 ,299 ,302 ,303 ,306, 308, 309, 313, 316, 317,
320, 322, 323, 324, 325, 326, 332, 333, 338 ,343, 346, 347, 349, 351, 352)) %>%
left_join(comprehension%>% pivot_wider(id_cols = c("ID"),
names_from = "task", values_from = "compAttempts")
, by = "ID")
View(df)
ggplot(df, aes(sam, G.Value.Guided)) + geom_jitter()
ggplot(df, aes(sam, G.Value.Guided)) + geom_jitter() +
geom_smooth(method = "lm")
ggplot(df, aes(sam, G.Directed)) + geom_jitter() +
geom_smooth(method = "lm")
############# relating bandit task behaviour to questionnaire scores ##############
rm(list = ls())
library(tidyverse)
library(ggplot2)
#library(jsonlite)
library(brms)
library(ggridges)
theme_set(theme_classic(base_size = 14))
library(here)
session <- 1
load(sprintf("analysis/bandits/banditsWave%i.Rda", session))
source("analysis/recovery_utils.R")
se<-function(x){sd(x, na.rm = T)/sqrt(length(na.omit(x)))}
meann <- function(x){mean(x, na.rm = T)}
horizon <- subset(horizon,!is.na(info))
sam <- subset(sam, !is.na(chosen))
restless <- subset(restless, !is.na(chosen))
horizon <- horizon[order(horizon$ID), ]
sam <- sam[order(sam$ID), ]
restless <- restless[order(restless$ID), ]
load(sprintf("analysis/qswave%i.Rda", session))
qs <- read.csv("task/questionnaires.csv", sep = ";")
qs$Qnum <- NA
for (i in unique(qs$Measure)){
qs$Qnum[qs$Measure == i] <- 0:(nrow(qs[qs$Measure == i, ])-1)
}
qs$Q <- paste(qs$Measure, qs$Qnum, sep = "_")
responses <- pivot_longer(qdat, cols = c(10:71), names_to = "Q", values_to = "response")
responses$attention_check <- qs$Attention.check[match(responses$Q, qs$Q)]
responses$reversed <- qs$Reverse.coded[match(responses$Q, qs$Q)]
responses <- subset(responses, attention_check == 0)
# distinguish panas positive and negative
PANASpos <- c(1,3,5,9,10,12,14,16,17,19)
PANASneg <- c(2,4,6,7,8,11,13,15,18,20)
qs$Measure[qs$Measure == "PANAS" & is.element((qs$Qnum+1), PANASpos)] <- "PANASpos"
qs$Measure[qs$Measure == "PANAS" & is.element((qs$Qnum+1), PANASneg)] <- "PANASneg"
qs$Measure[qs$Measure == "STICSA" & qs$sticsaSubscale == "s"] <- "STICSAsoma"
qs$Measure[qs$Measure == "STICSA" & qs$sticsaSubscale == "c"] <- "STICSAcog"
responses$measure <- qs$Measure[match(responses$Q, qs$Q)]
library(plyr)
maxval <- ddply(responses, ~measure, summarise, max = max(response) )
responses$max <- maxval$max[match(responses$measure, maxval$measure)]
responses$response <- ifelse(responses$reversed == 1, as.numeric(responses$max) - as.numeric(responses$response), as.numeric(responses$response))
View(responses)
View(responses)
dat_for_efa <- responses %>%
select(ID, Q, response, measure)
dat_for_efa <- responses %>%
select(ID, Q, response) %>%
pivot_wider(id_cols = ID, names_from = Q, values_from = response)
View(dat_for_efa)
write.csv(dat_for_efa, "analysis/dat_for_efa.csv")
descr_for_efa <- responses %>%
select(ID, Q, measure)
write.csv(descr_for_efa, "analysis/descr_for_efa.csv")
load("analysis/bandits/modellingResults/recoveryHorizonSession1Wilson_bayesian_full_horizon10only.Rda")
View(trueParams)
load("analysis/bandits/modellingResults/recoveryHorizonSession1Wilson_bayesian_full_horizon5only.Rda")
trueParams5 <- trueParams
recoveredParams5 <- recoveredParams
View(cors)
load("analysis/bandits/modellingResults/recoveryHorizonSession1Wilson_bayesian_full_horizon10only.Rda")
trueParams10 <- trueParams
recoveredParams10 <- recoveredParams
View(trueParams)
trueParams <- trueParams5 %>%
mutate(ID = parse_integer(rownames(.)))
trueParams <- trueParams5 %>%
mutate(ID = parse_number(rownames(.)))
trueParams <- trueParams5 %>%
mutate(ID = parse_number(rownames(.))) %>%
left_join(trueParams10 %>% mutate(ID = parse_number(rownames(.))),
by = c("ID", "predictor"))
trueParams <- trueParams5 %>%
mutate(ID = parse_number(rownames(.))) %>%
left_join(trueParams10 %>% mutate(ID = parse_number(rownames(.))),
by = c("ID", "predictor")) %>%
mutate(estimate = estimate.y - estimate.x)
recoveredParams <- recoveredParams5 %>%
mutate(ID = parse_number(rownames(.))) %>%
left_join(recoveredParams10 %>% mutate(ID = parse_number(rownames(.))),
by = c("ID", "predictor")) %>%
mutate(estimate = estimate.y - estimate.x)
View(recovery_horizon)
params <- unique(trueParams$predictor)
cors <- data.frame(true = rep(params, length(params)),
recovered =  rep(params, each = length(params)),
cor = NA)
cors$cor <- apply(as.array(1:nrow(cors)), 1, function(x) cor(trueParams$estimate[trueParams$predictor == cors$true[x]],
recoveredParams$estimate[recoveredParams$predictor == cors$recovered[x]]))
View(cors)
ggplot(cors, aes(x = true, y = recovered, fill = cor)) + geom_raster() + scale_fill_gradient2(high = "#66C2A5", low = "#FC8D62", mid = "white")+
geom_label(aes(label = round(cor, digits = 2)), fill = "white") +
labs(title = paste("Recovery of Horizon task using ", "Wilson"),
subtitle = paste("session 1"))
ggplot(cors, aes(x = true, y = recovered, fill = cor)) + geom_raster() +
scale_fill_gradient2(high = "#66C2A5", low = "#FC8D62", mid = "white", limits = c(0,1))+
geom_label(aes(label = round(cor, digits = 2)), fill = "white") +
labs(title = paste("Recovery of Horizon task using ", "Wilson"),
subtitle = paste("session 1"))
ggplot(cors, aes(x = true, y = recovered, fill = cor)) + geom_raster() +
scale_fill_gradient2(high = "#66C2A5", low = "#FC8D62", mid = "white", limits = c(-1,,1))+
geom_label(aes(label = round(cor, digits = 2)), fill = "white") +
labs(title = paste("Recovery of Horizon task using ", "Wilson"),
subtitle = paste("session 1"))
ggplot(cors, aes(x = true, y = recovered, fill = cor)) + geom_raster() +
scale_fill_gradient2(high = "#66C2A5", low = "#FC8D62", mid = "white", limits = c(-1,1))+
geom_label(aes(label = round(cor, digits = 2)), fill = "white") +
labs(title = paste("Recovery of Horizon task using ", "Wilson"),
subtitle = paste("session 1"))
params <- list()
for (s in 1:2){
data <- load_and_prep_bandit_data(s)$sam
out <- fit_model_sam(data, model = "UCB", hierarchical = T, use_saved = T)
# inspect the model to ensure everything is nicely converged and stuff
print(out[[1]])
params[[s]] <- out[[2]]
}
sam_params <- params %>% bind_rows(.id = "session") %>%
mutate(estimate = -1*estimate,
ID = parse_number(rownames(.))) # already flipped to be larger number more seeking
## Horizon
params <- list()
for (s in 1:2){
p <- list()
for (h in c(-0.5, 0.5)){
data <- load_and_prep_bandit_data(s)$horizon
out <- fit_model_horizon(data[data$Horizon == h, ], model = "Wilson", bayesian = T, full = T, no_horizon = T, use_saved = T)
# inspect the model to ensure everything is nicely converged and stuff
print(out[[1]])
p <- append(p, list(out[[2]]))
}
params[[s]] <- p %>% bind_rows(.id = "horizon") %>%
mutate(horizon = recode(horizon, `1` = "short", `2` = "long"),
ID = parse_number(rownames(.))) %>%
pivot_wider(id_cols = c("ID", "predictor"), names_from = "horizon", values_from = "estimate") %>%
mutate(estimate = long - short) %>%
subset(select = -c(long, short))
}
horizon_params <- params %>% bind_rows(.id = "session")
## combine
params <- list(sam = sam_params, horizon = horizon_params) %>%
bind_rows(.id = "task")%>%
subset(select = c("predictor", "estimate", "task", "session","ID"))
restless <- readRDS("analysis/bandits/4arlb-maps-hierarchical.RDS")
rest_params <- restless %>%
pivot_longer(cols = -ID, values_to = "estimate", names_to = "predictor") %>%
mutate(session = as.character(parse_number(predictor)),
predictor = ifelse(grepl("ru", predictor), "RU", "V"),
task = "restless")
params <- list(params, rest_params) %>%
bind_rows()
## calculate "fixed effects"
fixed <- params %>% # first we need to calculate subject-level averages to then get the adjusted CIs
group_by(ID, task) %>%
mutate(sub_avg = mean(estimate)) %>%
ungroup() %>%
group_by(task) %>%
mutate(task_avg = mean(estimate)) %>%
ungroup() %>%
mutate(estimate_corrected = estimate - sub_avg + task_avg) %>%
group_by(predictor, session, task) %>% # from here on we aggregate
summarise(Estimate = mean(estimate),
`Est.Error` = se(estimate),
`l-95% CI` = mean(estimate) - 1.96*se(estimate),
`u-95% CI` = mean(estimate) + 1.96*se(estimate),
se_corrected = se(estimate_corrected),
l_corrected = mean(estimate_corrected) - 1.96 * se_corrected,
u_corrected = mean(estimate_corrected) + 1.96 * se_corrected,
estimate_corrected = mean(estimate_corrected))
View(fixed)
View(params)
## calculate "fixed effects"
fixed <- params %>% # first we need to calculate subject-level averages to then get the adjusted CIs
group_by(ID, task) %>%
mutate(sub_avg = mean(estimate)) %>%
ungroup() %>%
group_by(task) %>%
mutate(task_avg = mean(estimate)) %>%
ungroup() %>%
mutate(estimate_corrected = estimate - sub_avg + task_avg) %>%
group_by(predictor, session, task) %>% # from here on we aggregate
summarise(Estimate = mean(estimate),
`Est.Error` = se(estimate),
`l-95% CI` = mean(estimate) - 1.96*se(estimate),
`u-95% CI` = mean(estimate) + 1.96*se(estimate),
se_corrected = se(estimate_corrected),
l_corrected = mean(estimate_corrected) - 1.96 * se_corrected,
u_corrected = mean(estimate_corrected) + 1.96 * se_corrected,
estimate_corrected = mean(estimate_corrected))
View(fixed)
summary(params)
table(params$predictor)
table(params$task)
table(params$session)
## save
write.csv(params,"analysis/bandits/AllModelParameters_2abUCB.csv")
saveRDS(params, file ="analysis/bandits/allParams_2abUCB.rds")
###################### final correlation matrix #########################
s <- session
params <- readRDS("analysis/bandits/allParams_2abUCB.rds") %>%
mutate(task = recode(task,"sam" = "2AB"),
predictor = paste(task, predictor, sep = "_")) %>%
subset(!grepl("ntercept", predictor) & session == s,
select = c("ID", "predictor", "estimate"))
load(sprintf("analysis/bandits/optimal_switch_session%i.Rda", session))
load(sprintf("analysis/qdat_session%i.Rda", session))
Poptimal <- Poptimal %>%
rename(estimate = Poptimal) %>%
mutate(predictor = paste(model, "Poptimal", sep = "_")) %>%
subset(select = c("ID", "predictor", "estimate"))
switch <- switch %>%
rename(estimate = Pswitch) %>%
mutate(predictor = paste(model, "Pswitch", sep = "_")) %>%
subset(select = c(ID, predictor, estimate))
avg <- avg %>%
rename(estimate = score,
predictor = measure)
###################### final correlation matrix #########################
s <- session
params <- readRDS("analysis/bandits/allParams_2abUCB.rds") %>%
mutate(task = recode(task,"sam" = "2AB"),
predictor = paste(task, predictor, sep = "_")) %>%
subset(!grepl("ntercept", predictor) & session == s,
select = c("ID", "predictor", "estimate"))
load(sprintf("analysis/bandits/optimal_switch_session%i.Rda", session))
load(sprintf("analysis/qdat_session%i.Rda", session))
Poptimal <- Poptimal %>%
rename(estimate = Poptimal) %>%
mutate(predictor = paste(model, "Poptimal", sep = "_")) %>%
subset(select = c("ID", "predictor", "estimate"))
library(tidyverse)
###################### final correlation matrix #########################
s <- session
params <- readRDS("analysis/bandits/allParams_2abUCB.rds") %>%
mutate(task = recode(task,"sam" = "2AB"),
predictor = paste(task, predictor, sep = "_")) %>%
subset(!grepl("ntercept", predictor) & session == s,
select = c("ID", "predictor", "estimate"))
load(sprintf("analysis/bandits/optimal_switch_session%i.Rda", session))
load(sprintf("analysis/qdat_session%i.Rda", session))
Poptimal <- Poptimal %>%
rename(estimate = Poptimal) %>%
mutate(predictor = paste(model, "Poptimal", sep = "_")) %>%
subset(select = c("ID", "predictor", "estimate"))
View(Poptimal)
switch <- switch %>%
rename(estimate = Pswitch) %>%
mutate(predictor = paste(model, "Pswitch", sep = "_")) %>%
subset(select = c(ID, predictor, estimate))

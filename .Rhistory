),
y = recode(y,
"restless_V" = "Value-guided restless",
"restless_RU" = "Directed restless",
"restless_Pswitch" = "P(switch) restless",
"restless_Poptimal" = "P(optimal) restless",
"horizon_Pswitch" = "P(switch) horizon",
"horizon_Poptimal" = "P(optimal) horizon",
"horizon_info" = "Directed horizon",
"horizon_delta_mean" = "Value-guided horizon",
"2AB_VTU" = "Random 2AB",
"2AB_V" = "Value-guided 2AB",
"2AB_RU" = "Directed 2AB",
"2AB_Pswitch" = "P(switch) 2AB",
"2AB_Poptimal" = "P(optimal) 2AB",
))
cors$y <- factor(cors$y, levels = c("Random 2AB", "Directed restless","Directed 2AB","Directed horizon",
"Value-guided restless", "Value-guided 2AB", "Value-guided horizon",
"P(switch) restless", "P(switch) 2AB","P(switch) horizon",
"P(optimal) restless", "P(optimal) 2AB", "P(optimal) horizon"))
cors$x  <-  factor(cors$x, levels = c("Exploration", "Openness",
"Cognitive anxiety", "Somatic anxiety", "Depression",
"Negative mood", "Positive mood",
"Operation span", "Symmetry span", "Updating"))
ext_validty <- heatmap(cors) + labs(title = "Correlation of task measures and questionnaire scores",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))
ext_validty
load("analysis/external_validity_cors_session2.Rda")
View(cors)
cors$y <- row.names(cors)
cors <- cors %>%
pivot_longer(cols = -y, names_to = "x", values_to = "cor") %>%
mutate(x = recode(x,
"CEI" = "Exploration",
"BIG_5" = "Openness",
"STICSAcog" = "Cognitive anxiety",
"STICSAsoma" = "Somatic anxiety",
"PHQ_9" = "Depression",
"PANASneg" = "Negative mood",
"PANASpos" = "Positive mood",
"OS_recall_1" = "Operation span",
"SS_recall_1" = "Symmetry span",
"WMU_recall_1" = "Updating"
),
y = recode(y,
"restless_V" = "Value-guided restless",
"restless_RU" = "Directed restless",
"restless_Pswitch" = "P(switch) restless",
"restless_Poptimal" = "P(optimal) restless",
"horizon_Pswitch" = "P(switch) horizon",
"horizon_Poptimal" = "P(optimal) horizon",
"horizon_info" = "Directed horizon",
"horizon_delta_mean" = "Value-guided horizon",
"2AB_VTU" = "Random 2AB",
"2AB_V" = "Value-guided 2AB",
"2AB_RU" = "Directed 2AB",
"2AB_Pswitch" = "P(switch) 2AB",
"2AB_Poptimal" = "P(optimal) 2AB",
))
cors$y <- factor(cors$y, levels = c("Random 2AB", "Directed restless","Directed 2AB","Directed horizon",
"Value-guided restless", "Value-guided 2AB", "Value-guided horizon",
"P(switch) restless", "P(switch) 2AB","P(switch) horizon",
"P(optimal) restless", "P(optimal) 2AB", "P(optimal) horizon"))
cors$x  <-  factor(cors$x, levels = c("Exploration", "Openness",
"Cognitive anxiety", "Somatic anxiety", "Depression",
"Negative mood", "Positive mood",
"Operation span", "Symmetry span", "Updating"))
ext_validty <- heatmap(cors) + labs(title = "Correlation of task measures and questionnaire scores",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))
ext_validty
tbl_reliability_bandits <- readRDS("analysis/bandits/reliabilities-hybrid.csv")
levels(tbl_reliability_bandits$parameter) = c("Intercept", "Value-Guided", "Directed", "Random", "Regret", "p(optimal)", "p(switch)")
levels(tbl_reliability_bandits$task) <- c("Horizon", "Two-Armed", "Restless")
pl_rel <- ggplot(tbl_reliability_bandits %>% filter(parameter != "Interept"), aes(value, fct_rev(parameter))) +
geom_rect(aes(xmin = 0, xmax = .5, ymin = 0, ymax = 8), fill = "tomato3", alpha = .1) +
geom_rect(aes(xmin = .5, xmax = .75, ymin = 0, ymax = 8), fill = "orange", alpha = .1) +
geom_rect(aes(xmin = .75, xmax = .9, ymin = 0, ymax = 8), fill = "lightgreen", alpha = .1) +
geom_rect(aes(xmin = .9, xmax = 1, ymin = 0, ymax = 8), fill = "darkgreen", alpha = .1) +
geom_point(aes(shape = measure), size = 3, color = "black") +
facet_wrap(~ task) +
coord_cartesian(xlim = c(0, 1)) +
labs(title = "Test-Retest Reliability", x = "ICC3(C,1)", y = "") +
scale_x_continuous(expand = c(0, 0), breaks = seq(0, .8, by = .2)) +
scale_y_discrete(expand = c(0.025, 0)) +
theme(
strip.background = element_rect(fill = "white"),
legend.position = "bottom",
axis.text.x = element_text(angle = 40, hjust = .95, vjust = .95)
) +
scale_shape_manual(values = c(16, 3), name = "")
pl_rel
save_my_pdf_and_tiff_and_png(
pl_rel,
str_c(my_dir, "/reliability-bandits-literature"),
12, 5
)
# final plotting for MS
rm(list = ls())
library(grid)
library(gridExtra)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(brms)
library(here)
theme_set(theme_bw(base_size = 14))
source("analysis/recovery_utils.R")
se<-function(x){sd(x, na.rm = T)/sqrt(length(na.omit(x)))}
meann <- function(x){mean(x, na.rm = T)}
self_cor <- function(df){
cors <- df %>%
select(-ID) %>%
cor(use = "pairwise.complete.obs") %>%
as.data.frame() %>%
mutate(x = rownames(.)) %>%
pivot_longer(cols = -x, names_to = "y", values_to = "cor")
return(cors)
}
dirs_homegrown <- c(
"utils/analysis-utils.R", "utils/plotting-utils.R",
"utils/modeling-utils.R"
)
walk(dirs_homegrown, source)
# Which Models? ---------------------------------------------------------
my_dir <- "figures/figures-ms/submission-1"
if (!dir.exists(my_dir)){dir.create(my_dir, recursive = TRUE)}
tbl_reliability_bandits <- readRDS("analysis/bandits/reliabilities-hybrid.csv")
levels(tbl_reliability_bandits$parameter) = c("Intercept", "Value-Guided", "Directed", "Random", "Regret", "p(optimal)", "p(switch)")
levels(tbl_reliability_bandits$task) <- c("Horizon", "Two-Armed", "Restless")
pl_rel <- ggplot(tbl_reliability_bandits %>% filter(parameter != "Interept"), aes(value, fct_rev(parameter))) +
geom_rect(aes(xmin = 0, xmax = .5, ymin = 0, ymax = 8), fill = "tomato3", alpha = .1) +
geom_rect(aes(xmin = .5, xmax = .75, ymin = 0, ymax = 8), fill = "orange", alpha = .1) +
geom_rect(aes(xmin = .75, xmax = .9, ymin = 0, ymax = 8), fill = "lightgreen", alpha = .1) +
geom_rect(aes(xmin = .9, xmax = 1, ymin = 0, ymax = 8), fill = "darkgreen", alpha = .1) +
geom_point(aes(shape = measure), size = 3, color = "black") +
facet_wrap(~ task) +
coord_cartesian(xlim = c(0, 1)) +
labs(title = "Test-Retest Reliability", x = "ICC3(C,1)", y = "") +
scale_x_continuous(expand = c(0, 0), breaks = seq(0, .8, by = .2)) +
scale_y_discrete(expand = c(0.025, 0)) +
theme(
strip.background = element_rect(fill = "white"),
legend.position = "bottom",
axis.text.x = element_text(angle = 40, hjust = .95, vjust = .95)
) +
scale_shape_manual(values = c(16, 3), name = "")
pl_rel
save_my_pdf_and_tiff_and_png(
pl_rel,
str_c(my_dir, "/reliability-bandits-literature"),
12, 5
)
pl_rel <- ggarrange(pl_rel, ncol =1, labels = c("A"))
# 1.3. Convergent Validity --------------------------------------------------
## task based
load("analysis/bandits/optimal_switch_session1.Rda")
relabel <- function(df) {
relabelled <- df %>%
mutate(x = factor(x, levels = c("horizon", "2AB", "restless"),
labels = c("Horizon", "Two-armed", "Restless")),
y = factor(y, levels = c("restless", "2AB", "horizon"),
labels = c("Restless", "Two-armed", "Horizon")))
return(relabelled)
}
### P(switch)
Pswitch <- switch %>%
pivot_wider(id_cols = ID, names_from = model, values_from = Pswitch) %>%
self_cor() %>%
relabel()
swi <- heatmap(Pswitch) +
labs(title = "P(switch)",
x = element_blank(),
y = element_blank())+
theme(legend.position = "none")
swi
### WM
wm <- readRDS("analysis/4arlb-overviewAll.rds") %>%
subset(session == 1, select = c(ID,OS_recall, SS_recall, WMU_recall)) %>%
self_cor() %>%
mutate(x = factor(x, levels = c("OS_recall", "SS_recall", "WMU_recall"),
labels = c("Oper. span", "Sym. span", "Updating")),
y = factor(y, levels = c("WMU_recall", "SS_recall", "OS_recall"),
labels = c("Updating", "Symmetry span", "Operation span")))
WM <- heatmap(wm) +
labs(title = "Working Memory",
x = element_blank(),
y = element_blank())+
theme(legend.position = "none")
WM
task_based <- ggarrange(swi, WM, ncol = 1, nrow = 2, labels = c("B", "C"), align = "hv")
task_based
### model parameters
cors <- readRDS("analysis/bandits/allParams.Rds") %>%
subset(predictor != "Intercept" & session == 1) %>%
mutate(predictor = recode(predictor,
"V" = "Value-guided",
"RU" = "Directed",
"VTU" = "Random",
"delta_mean" = "Value-guided",
"info" = "Directed"),
task = recode(task, "sam" = "Two-armed",
"horizon" = "Horizon",
"restless" = "Restless"),
variable = paste(predictor, task)) %>%
pivot_wider(id_cols = "ID", names_from = "variable", values_from = "estimate") %>%
self_cor() %>%
mutate(x = factor(x, levels = c("Value-guided Horizon", "Value-guided Two-armed", "Value-guided Restless",
"Directed Horizon", "Directed Two-armed", "Directed Restless",
"Random Two-armed"),
labels = c("Value-guided Horizon", "Value-guided Two-armed", "Value-guided Restless",
"Directed Horizon", "Directed Two-armed", "Directed Restless",
"Random Two-armed")),
y = factor(y, levels = c("Random Two-armed", "Directed Restless", "Directed Two-armed", "Directed Horizon",
"Value-guided Restless", "Value-guided Two-armed", "Value-guided Horizon")))
param_based <- heatmap(cors) +
labs(title = "Parameter estimates",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))+
geom_hline(yintercept = 1.5, color = "white", size = 3)+
geom_hline(yintercept = 4.5, color = "white", size = 3)+
geom_vline(xintercept = 6.5, color = "white", size = 3)+
geom_vline(xintercept = 3.5, color = "white", size = 3)+
theme(legend.position = "none")
param_based <- ggarrange(param_based, labels = c("D"))
converge <- ggarrange(task_based, param_based, ncol = 2, widths = c(2,3))
converge
save_my_pdf_and_tiff_and_png(converge,
str_c(my_dir, "/convergence_default"),
w = 12,
h = 5)
#ggsave("plots/submission1/convergent_validity_parameters.png")
# 1.5. Variable Correlations --------------------------------------------------
load("analysis/external_validity_cors_session2.Rda")
cors$y <- row.names(cors)
cors <- cors %>%
pivot_longer(cols = -y, names_to = "x", values_to = "cor") %>%
mutate(x = recode(x,
"CEI" = "Exploration",
"BIG_5" = "Openness",
"STICSAcog" = "Cognitive anxiety",
"STICSAsoma" = "Somatic anxiety",
"PHQ_9" = "Depression",
"PANASneg" = "Negative mood",
"PANASpos" = "Positive mood",
"OS_recall_1" = "Operation span",
"SS_recall_1" = "Symmetry span",
"WMU_recall_1" = "Updating"
),
y = recode(y,
"restless_V" = "Value-guided restless",
"restless_RU" = "Directed restless",
"restless_Pswitch" = "P(switch) restless",
"restless_Poptimal" = "P(optimal) restless",
"horizon_Pswitch" = "P(switch) horizon",
"horizon_Poptimal" = "P(optimal) horizon",
"horizon_info" = "Directed horizon",
"horizon_delta_mean" = "Value-guided horizon",
"2AB_VTU" = "Random 2AB",
"2AB_V" = "Value-guided 2AB",
"2AB_RU" = "Directed 2AB",
"2AB_Pswitch" = "P(switch) 2AB",
"2AB_Poptimal" = "P(optimal) 2AB",
))
cors$y <- factor(cors$y, levels = c("Random 2AB", "Directed restless","Directed 2AB","Directed horizon",
"Value-guided restless", "Value-guided 2AB", "Value-guided horizon",
"P(switch) restless", "P(switch) 2AB","P(switch) horizon",
"P(optimal) restless", "P(optimal) 2AB", "P(optimal) horizon"))
cors$x  <-  factor(cors$x, levels = c("Exploration", "Openness",
"Cognitive anxiety", "Somatic anxiety", "Depression",
"Negative mood", "Positive mood",
"Operation span", "Symmetry span", "Updating"))
ext_validty <- heatmap(cors) + labs(title = "Correlation of task measures and questionnaire scores",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))
ext_validty
save_my_pdf_and_tiff_and_png(ext_validty,
str_c(my_dir, "/external_validity_default"),
h= 6,
w = 12)
ext_validty <- ext_validty +theme(legend.position = "bottom")
ext_validty <- ggarrange(ext_validty, ncol = 1, labels = c("E"))
rel_conv_default <- ggarrange(pl_rel, converge, ext_validty, ncol = 1, nrow = 3,
heights = c(1.5,2,3))
rel_conv_default
save_my_pdf_and_tiff_and_png(rel_conv_default,
str_c(my_dir, "/reliability_convergence_default"),
h = 14,
w = 10)
load(sprintf("analysis/qdat_session%i.Rda", session))
session <- 2
load(sprintf("analysis/qdat_session%i.Rda", session))
View(avg)
# takes > 1 min to run
horizon <- load_and_prep_bandit_data(session = 1)$horizon
res_list_short <- recovery_horizon(horizon[horizon$Horizon == -0.5, ], "Wilson", full = T, it = 8000, save = T, bayesian = T, no_horizon = T, no_intercept = F, use_saved = T)
res_list_long <- recovery_horizon(horizon[horizon$Horizon == 0.5, ], "Wilson", full = T, it = 8000, save = T, bayesian = T, no_horizon = T, no_intercept = F, use_saved = T)
true_short <- res_list_short[[1]]
recovered_short <- res_list_short[[2]]
true_long <- res_list_long[[1]]
recovered_long <- res_list_long[[2]]
# Function to prepare parameters
prepare_params <- function(trueParams1, trueParams2) {
trueParams <- trueParams1 %>%
mutate(ID = parse_number(rownames(.))) %>%
left_join(trueParams2 %>% mutate(ID = parse_number(rownames(.))), by = c("ID", "predictor")) %>%
mutate(estimate = estimate.y - estimate.x)
return(trueParams)
}
# Prepare true and recovered parameters
trueParams <- prepare_params(true_short, true_long)
recoveredParams <- prepare_params(recovered_short, recovered_long)
# Calculate correlations
params <- unique(trueParams$predictor)
cors <- expand.grid(true = params, recovered = params)
cors$cor <- mapply(function(t, r) cor(trueParams$estimate[trueParams$predictor == t], recoveredParams$estimate[recoveredParams$predictor == r]), cors$true, cors$recovered)
cors <- cors %>%
mutate(recovered = factor(recovered, levels = c("info", "delta_mean", "Intercept"),
labels = c("Directed", "Value-guided", "Intercept")),
true = factor(true, levels = c("Intercept", "delta_mean", "info"),
labels = c("Intercept", "Value-guided", "Directed"))) %>%
subset(recovered != "Intercept" & true != "Intercept")
p1 <- heatmap(cors, x = cors$true, y = cors$recovered) +
labs(title = "Horizon task",
x = "Fitted parameters",
y = "Recovered parameters")
p1
## two-armed bd ------------------------------------
sam <- load_and_prep_bandit_data(session = 1)$sam
load("analysis/bandits/modellingResults/recoverySamSession1hybrid_hierarchical_notIterative.Rda")
cors <- cors %>%
mutate(recovered = factor(recovered, levels = c("VTU", "RU", "V", "Intercept"),
labels = c("Random","Directed", "Value-guided", "Intercept")),
true = factor(true, levels = c("Intercept", "V", "RU", "VTU"),
labels = c("Intercept", "Value-guided", "Directed", "Random"))) %>%
subset(recovered != "Intercept" & true != "Intercept")
p2 <- heatmap(cors, x = cors$true, y = cors$recovered) +
labs(title = "Two-armed bandit",
x = "Fitted parameters",
y = "Recovered parameters")
p2
file_loc_hc_s1 <- "data/restless-hierarchical-model-posterior-s1.RDS"
file_loc_hc_s1_recovery <- "data/restless-hierarchical-model-recovery-posterior-s1.RDS"
tbl_draws_hc_s1 <- readRDS(file_loc_hc_s1)
tbl_draws_hc_s1_recovery <- readRDS(file_loc_hc_s1_recovery)
l_recovery_s1 <- map_cor(tbl_draws_hc_s1, tbl_draws_hc_s1_recovery, c("tau", "beta"))
recovery <- ggarrange(p1, p2, pl_heatmap_s1, widths = c(3.5,4,3), ncol = 3, labels = "AUTO",
common.legend = T, legend = "right")
recovery
recovery_heatmap <- function(l_recovery, ttl) {
tbl_in_out <- l_recovery$cor_recovery %>%
pivot_longer(colnames(.)) %>%
mutate(
param_in = str_match(name, "([a-z]*)_")[, 2],
param_out = str_match(name, "_([a-z]*)_out")[, 2]
)
ggplot(tbl_in_out, aes(param_in, param_out)) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = round(value, 2)), size = 6, color = "white") +
theme_bw() +
scale_x_discrete(expand = c(0.01, 0)) +
scale_y_discrete(expand = c(0.01, 0)) +
scale_fill_viridis_c(guide = "none") +
labs(x = "MAP (Data)", y = "MAP (Prediction)", title = ttl) +
theme(
strip.background = element_rect(fill = "white"),
text = element_text(size = 22)
) +
scale_color_gradient(name = "", low = "skyblue2", high = "tomato4")
}
pl_heatmap_s1 <- recovery_heatmap(l_recovery_s1, "Restless bandit", c("Value-Guided", "Directed")) +
labs(x = "Fitted parameters",
y = "Recovered parameters")
file_loc_hc_s1 <- "data/restless-hierarchical-model-posterior-s1.RDS"
file_loc_hc_s1_recovery <- "data/restless-hierarchical-model-recovery-posterior-s1.RDS"
tbl_draws_hc_s1 <- readRDS(file_loc_hc_s1)
tbl_draws_hc_s1_recovery <- readRDS(file_loc_hc_s1_recovery)
l_recovery_s1 <- map_cor(tbl_draws_hc_s1, tbl_draws_hc_s1_recovery, c("tau", "beta"))
View(tbl_draws_hc_s1)
l_recovery_s1 <- map_cor(tbl_draws_hc_s1, tbl_draws_hc_s1_recovery, c("tau", "beta"))
map_cor <- function(tbl_draws_hc, tbl_draws_hc_recovery) {
l_tbl_draws <- list(tbl_draws_hc, tbl_draws_hc_recovery)
l_tbl_maps <- map2(l_tbl_draws, c("data", "preds"), by_participant_maps)
tbl_recovery <- reduce(
l_tbl_maps,
~ left_join(.x, .y, by = c("ID", "parameter"), suffix = c("_data", "_preds"))
)
cor_recovery <- tbl_recovery %>%
pivot_wider(names_from = parameter, values_from = c(map_data, map_preds)) %>%
select(-c(fit_time_data, fit_time_preds)) %>%
summarize(
beta_in_beta_out = cor(map_data_beta, map_preds_beta),
tau_in_tau_out = cor(map_data_tau, map_preds_tau),
beta_in_tau_out = cor(map_data_beta, map_preds_tau),
tau_in_beta_out = cor(map_data_tau, map_preds_beta)
)
return(list(tbl_recovery = tbl_recovery, cor_recovery = cor_recovery))
}
l_recovery_s1 <- map_cor(tbl_draws_hc_s1, tbl_draws_hc_s1_recovery, c("tau", "beta"))
pl_heatmap_s1 <- recovery_heatmap(l_recovery_s1, "Restless bandit", c("Value-Guided", "Directed")) +
labs(x = "Fitted parameters",
y = "Recovered parameters")
l_recovery_s1 <- map_cor(tbl_draws_hc_s1, tbl_draws_hc_s1_recovery, c("tau", "beta"))
file_loc_hc_s1 <- "data/restless-hierarchical-model-posterior-s1.RDS"
file_loc_hc_s1_recovery <- "data/restless-hierarchical-model-recovery-posterior-s1.RDS"
tbl_draws_hc_s1 <- readRDS(file_loc_hc_s1)
tbl_draws_hc_s1_recovery <- readRDS(file_loc_hc_s1_recovery)
l_recovery_s1 <- map_cor(tbl_draws_hc_s1, tbl_draws_hc_s1_recovery, c("tau", "beta"))
l_recovery_s1 <- map_cor(tbl_draws_hc_s1, tbl_draws_hc_s1_recovery)
View(tbl_draws_hc_s1_recovery)
View(tbl_draws_hc_s1_recovery)
tbl_draws_hc <- tbl_draws_hc_s1
tbl_draws_hc_recovery <- tbl_draws_hc_s1_recovery
l_tbl_draws <- list(tbl_draws_hc, tbl_draws_hc_recovery)
l_tbl_maps <- map2(l_tbl_draws, c("data", "preds"), by_participant_maps)
source("~/Documents/GitHub/exploration-psychometrics/analysis/bandits/4arlb-hierarchical-bayesian.R", echo=TRUE)
l_recovery_s1 <- map_cor(tbl_draws_hc_s1, tbl_draws_hc_s1_recovery, c("tau", "beta"))
file_loc_hc_s1 <- "data/restless-hierarchical-model-posterior-s1.RDS"
file_loc_hc_s1_recovery <- "data/restless-hierarchical-model-recovery-posterior-s1.RDS"
tbl_draws_hc_s1 <- readRDS(file_loc_hc_s1)
tbl_draws_hc_s1_recovery <- readRDS(file_loc_hc_s1_recovery)
rm(list = ls())
library(grid)
library(gridExtra)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(brms)
library(here)
theme_set(theme_bw(base_size = 14))
source("analysis/recovery_utils.R")
se<-function(x){sd(x, na.rm = T)/sqrt(length(na.omit(x)))}
meann <- function(x){mean(x, na.rm = T)}
self_cor <- function(df){
cors <- df %>%
select(-ID) %>%
cor(use = "pairwise.complete.obs") %>%
as.data.frame() %>%
mutate(x = rownames(.)) %>%
pivot_longer(cols = -x, names_to = "y", values_to = "cor")
return(cors)
}
dirs_homegrown <- c(
"utils/analysis-utils.R", "utils/plotting-utils.R",
"utils/modeling-utils.R"
)
walk(dirs_homegrown, source)
# Which Models? ---------------------------------------------------------
my_dir <- "figures/figures-ms/submission-1"
if (!dir.exists(my_dir)){dir.create(my_dir, recursive = TRUE)}
# takes > 1 min to run
horizon <- load_and_prep_bandit_data(session = 1)$horizon
res_list_short <- recovery_horizon(horizon[horizon$Horizon == -0.5, ], "Wilson", full = T, it = 8000, save = T, bayesian = T, no_horizon = T, no_intercept = F, use_saved = T)
res_list_long <- recovery_horizon(horizon[horizon$Horizon == 0.5, ], "Wilson", full = T, it = 8000, save = T, bayesian = T, no_horizon = T, no_intercept = F, use_saved = T)
true_short <- res_list_short[[1]]
recovered_short <- res_list_short[[2]]
true_long <- res_list_long[[1]]
recovered_long <- res_list_long[[2]]
# Function to prepare parameters
prepare_params <- function(trueParams1, trueParams2) {
trueParams <- trueParams1 %>%
mutate(ID = parse_number(rownames(.))) %>%
left_join(trueParams2 %>% mutate(ID = parse_number(rownames(.))), by = c("ID", "predictor")) %>%
mutate(estimate = estimate.y - estimate.x)
return(trueParams)
}
# Prepare true and recovered parameters
trueParams <- prepare_params(true_short, true_long)
recoveredParams <- prepare_params(recovered_short, recovered_long)
# Calculate correlations
params <- unique(trueParams$predictor)
cors <- expand.grid(true = params, recovered = params)
cors$cor <- mapply(function(t, r) cor(trueParams$estimate[trueParams$predictor == t], recoveredParams$estimate[recoveredParams$predictor == r]), cors$true, cors$recovered)
cors <- cors %>%
mutate(recovered = factor(recovered, levels = c("info", "delta_mean", "Intercept"),
labels = c("Directed", "Value-guided", "Intercept")),
true = factor(true, levels = c("Intercept", "delta_mean", "info"),
labels = c("Intercept", "Value-guided", "Directed"))) %>%
subset(recovered != "Intercept" & true != "Intercept")
p1 <- heatmap(cors, x = cors$true, y = cors$recovered) +
labs(title = "Horizon task",
x = "Fitted parameters",
y = "Recovered parameters")
p1
## two-armed bd ------------------------------------
sam <- load_and_prep_bandit_data(session = 1)$sam
load("analysis/bandits/modellingResults/recoverySamSession1hybrid_hierarchical_notIterative.Rda")
cors <- cors %>%
mutate(recovered = factor(recovered, levels = c("VTU", "RU", "V", "Intercept"),
labels = c("Random","Directed", "Value-guided", "Intercept")),
true = factor(true, levels = c("Intercept", "V", "RU", "VTU"),
labels = c("Intercept", "Value-guided", "Directed", "Random"))) %>%
subset(recovered != "Intercept" & true != "Intercept")
p2 <- heatmap(cors, x = cors$true, y = cors$recovered) +
labs(title = "Two-armed bandit",
x = "Fitted parameters",
y = "Recovered parameters")
p2
file_loc_hc_s1 <- "data/restless-hierarchical-model-posterior-s1.RDS"
file_loc_hc_s1_recovery <- "data/restless-hierarchical-model-recovery-posterior-s1.RDS"
tbl_draws_hc_s1 <- readRDS(file_loc_hc_s1)
tbl_draws_hc_s1_recovery <- readRDS(file_loc_hc_s1_recovery)
l_recovery_s1 <- map_cor(tbl_draws_hc_s1, tbl_draws_hc_s1_recovery, c("tau", "beta"))
recovery <- ggarrange(p1, p2, pl_heatmap_s1, widths = c(3.5,4,3), ncol = 3, labels = "AUTO",
common.legend = T, legend = "right")
recovery
save_my_pdf_and_tiff_and_png(
recovery,
str_c(my_dir, "/recovery_default"),
14, 4
)

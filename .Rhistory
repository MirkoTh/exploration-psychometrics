labels = c("Cognitive anxiety",
"Somatic anxiety",
"Intolerance to uncertainty",
"Depression",
"Positive symptoms of psychosis",
"Negative symptoms of psychosis",
"Rumination",
"Negative affect",
"Externalising",
"ADHD",
"Autism",
""))+
coord_polar(theta = "x", direction=1) +
theme_minimal(base_size = 14)+
labs(title = "Psychiatric questionnaire scores of GPT-3")+
theme(axis.label.x = element_blank())
ggplot(df, aes(x = questionnaire, y = score, group = ID)) + geom_point()+ geom_line() + scale_x_discrete(expand = c(0,0),
labels = c("Cognitive anxiety",
"Somatic anxiety",
"Intolerance to uncertainty",
"Depression",
"Positive symptoms of psychosis",
"Negative symptoms of psychosis",
"Rumination",
"Negative affect",
"Externalising",
"ADHD",
"Autism",
""))+
coord_polar(theta = "x", direction=1) +
theme_minimal(base_size = 14)+
labs(title = "Psychiatric questionnaire scores of GPT-3",
x = element_blank(),
y = element_blank())
ggplot(df, aes(x = questionnaire, y = score, group = ID)) + geom_point()+ geom_line() + scale_x_discrete(expand = c(0,0),
labels = c("Cognitive anxiety",
"Somatic anxiety",
"Intolerance to uncertainty",
"Depression",
"Positive symptoms of psychosis",
"Negative symptoms of psychosis",
"Rumination",
"Negative affect",
"Externalising",
"ADHD",
"Autism",
""))+
coord_polar(theta = "x", direction=1) +
theme_minimal(base_size = 14)+
labs(title = "Psychiatric questionnaire scores of GPT-3",
x = element_blank(),
y = element_blank())+
theme(axis.label.y = element_blank())
ggplot(df, aes(x = questionnaire, y = score, group = ID)) + geom_point()+ geom_line() + scale_x_discrete(expand = c(0,0),
labels = c("Cognitive anxiety",
"Somatic anxiety",
"Intolerance to uncertainty",
"Depression",
"Positive symptoms of psychosis",
"Negative symptoms of psychosis",
"Rumination",
"Negative affect",
"Externalising",
"ADHD",
"Autism",
""))+
coord_polar(theta = "x", direction=1) +
theme_minimal(base_size = 14)+
labs(title = "Psychiatric questionnaire scores of GPT-3",
x = element_blank(),
y = element_blank())+
theme(axis.text.y = element_blank())
ggplot(df, aes(x = questionnaire, y = score, group = ID)) + geom_point()+ geom_line() + scale_x_discrete(expand = c(0,0),
labels = c("Cognitive anxiety",
"Somatic anxiety",
"Intolerance to uncertainty",
"Depression",
"Positive symptoms of psychosis",
"Negative symptoms of psychosis",
"Rumination",
"Negative affect",
"Externalising",
"ADHD",
"Autism",
""))+
coord_polar(theta = "x", direction=1) +
theme_minimal(base_size = 16)+
labs(title = "Psychiatric questionnaire scores of GPT-3",
x = element_blank(),
y = element_blank())+
theme(axis.text.y = element_blank())
ggplot(df, aes(x = questionnaire, y = score, group = ID)) + geom_point(size = 2)+ geom_line(size = 2) +
scale_x_discrete(expand = c(0,0),
labels = c("Cognitive anxiety",
"Somatic anxiety",
"Intolerance to uncertainty",
"Depression",
"Positive symptoms of psychosis",
"Negative symptoms of psychosis",
"Rumination",
"Negative affect",
"Externalising",
"ADHD",
"Autism",
""))+
coord_polar(theta = "x", direction=1) +
theme_minimal(base_size = 16)+
labs(title = "Psychiatric questionnaire scores of GPT-3",
x = element_blank(),
y = element_blank())+
theme(axis.text.y = element_blank())
ggplot(df, aes(x = questionnaire, y = score, group = ID)) + geom_point(size = 2)+ geom_line(size = 1.5) +
scale_x_discrete(expand = c(0,0),
labels = c("Cognitive anxiety",
"Somatic anxiety",
"Intolerance to uncertainty",
"Depression",
"Positive symptoms of psychosis",
"Negative symptoms of psychosis",
"Rumination",
"Negative affect",
"Externalising",
"ADHD",
"Autism",
""))+
coord_polar(theta = "x", direction=1) +
theme_minimal(base_size = 16)+
labs(title = "Psychiatric questionnaire scores of GPT-3",
x = element_blank(),
y = element_blank())+
theme(axis.text.y = element_blank())
ggplot(df, aes(x = questionnaire, y = score, group = ID)) + geom_point(size = 2)+ geom_line(size = 1.5) +
scale_x_discrete(expand = c(0,0),
labels = c("Cognitive anxiety",
"Somatic anxiety",
"Intolerance to uncertainty",
"Depression",
"Positive symptoms of psychosis",
"Negative symptoms of psychosis",
"Rumination",
"Negative affect",
"Externalising",
"ADHD",
"Autism",
""))+
coord_polar(theta = "x", direction=1) +
theme_minimal(base_size = 16)+
labs(title = "Psychiatric questionnaire scores of GPT-3",
x = element_blank(),
y = element_blank())+
theme(axis.text.y = element_blank())+
ylim(0, max(df$score))
ggplot(df, aes(x = questionnaire, y = score, group = ID)) + geom_point(size = 2)+ geom_line(size = 1.5) +
scale_x_discrete(expand = c(0,0),
labels = c("Cognitive anxiety",
"Somatic anxiety",
"Intolerance to uncertainty",
"Depression",
"Positive symptoms of psychosis",
"Negative symptoms of psychosis",
"Rumination",
"Negative affect",
"Externalising",
"ADHD",
"Autism",
""))+
coord_polar(theta = "x", direction=1) +
theme_minimal(base_size = 16)+
labs(title = "Psychiatric questionnaire scores of GPT-3",
x = element_blank(),
y = element_blank())+
theme(axis.text.y = element_blank(),
plot.margin = c(10, 10, 10, 10))+
ylim(0, max(df$score))
ggplot(df, aes(x = questionnaire, y = score, group = ID)) + geom_point(size = 2)+ geom_line(size = 1.5) +
scale_x_discrete(expand = c(0,0),
labels = c("Cognitive anxiety",
"Somatic anxiety",
"Intolerance to uncertainty",
"Depression",
"Positive symptoms of psychosis",
"Negative symptoms of psychosis",
"Rumination",
"Negative affect",
"Externalising",
"ADHD",
"Autism",
""))+
coord_polar(theta = "x", direction=1) +
theme_minimal(base_size = 16)+
labs(title = "Psychiatric questionnaire scores of GPT-3",
x = element_blank(),
y = element_blank())+
theme(axis.text.y = element_blank(),
plot.margin = margin(10, 10, 10, 10))+
ylim(0, max(df$score))
ggplot(df, aes(x = questionnaire, y = score, group = ID)) + geom_point(size = 2)+ geom_line(size = 1.5) +
scale_x_discrete(expand = c(0,0),
labels = c("Cognitive anxiety",
"Somatic anxiety",
"Intolerance to uncertainty",
"Depression",
"Positive symptoms of psychosis",
"Negative symptoms of psychosis",
"Rumination",
"Negative affect",
"Externalising",
"ADHD",
"Autism",
""))+
coord_polar(theta = "x", direction=1) +
theme_minimal(base_size = 16)+
labs(title = "Psychiatric questionnaire scores of GPT-3",
x = element_blank(),
y = element_blank())+
theme(axis.text.y = element_blank(),
plot.margin = margin(100, 100, 100, 100))+
ylim(0, max(df$score))
ggplot(df, aes(x = questionnaire, y = score, group = ID)) + geom_point(size = 2)+ geom_line(size = 1.5) +
scale_x_discrete(expand = c(0,0),
labels = c("Cognitive anxiety",
"Somatic anxiety",
"Intolerance to uncertainty",
"Depression",
"Positive symptoms of psychosis",
"Negative symptoms of psychosis",
"Rumination",
"Negative affect",
"Externalising",
"ADHD",
"Autism",
""))+
coord_polar(theta = "x", direction=1) +
theme_minimal(base_size = 16)+
labs(title = "Psychiatric questionnaire scores of GPT-3",
x = element_blank(),
y = element_blank())+
theme(axis.text.y = element_blank(),
plot.margin = margin(0,0,0,0))+
ylim(0, max(df$score))
ggplot(df, aes(x = questionnaire, y = score, group = ID)) + geom_point(size = 2)+ geom_line(size = 1.5) +
scale_x_discrete(expand = c(0,0),
labels = c("Cognitive anxiety",
"Somatic anxiety",
"Intolerance to uncertainty",
"Depression",
"Positive symptoms of psychosis",
"Negative symptoms of psychosis",
"Rumination",
"Negative affect",
"Externalising",
"ADHD",
"Autism",
""))+
coord_polar(theta = "x", direction=1, clip = "off") +
theme_minimal(base_size = 16)+
labs(title = "Psychiatric questionnaire scores of GPT-3",
x = element_blank(),
y = element_blank())+
theme(axis.text.y = element_blank())+
ylim(0, max(df$score))
ggplot(df, aes(x = questionnaire, y = score, group = ID)) + geom_point(size = 2)+ geom_line(size = 1.5) +
scale_x_discrete(expand = c(0,0),
labels = c("Cognitive anxiety",
"Somatic anxiety",
"Intolerance to uncertainty",
"Depression",
"Positive symptoms of psychosis",
"Negative symptoms of psychosis",
"Rumination",
"Negative affect",
"Externalising",
"ADHD",
"Autism",
""))+
coord_polar(theta = "x", direction=1, clip = "off") +
theme_minimal(base_size = 18)+
labs(title = "Psychiatric questionnaire scores of GPT-3",
x = element_blank(),
y = element_blank())+
theme(axis.text.y = element_blank())+
ylim(1, max(df$score))
ggplot(df, aes(x = questionnaire, y = score, group = ID)) + geom_point(size = 2)+ geom_line(size = 1.5) +
scale_x_discrete(expand = c(0,0),
labels = c("Cognitive anxiety",
"Somatic anxiety",
"Intolerance to uncertainty",
"Depression",
"Positive symptoms of psychosis",
"Negative symptoms of psychosis",
"Rumination",
"Negative affect",
"Externalising",
"ADHD",
"Autism",
""))+
coord_polar(theta = "x", direction=1, clip = "off") +
theme_minimal(base_size = 18)+
labs(title = "Psychiatric questionnaire scores of GPT-3",
x = element_blank(),
y = element_blank())+
theme(axis.text.y = element_blank())+
ylim(2, max(df$score))
ggplot(df, aes(x = questionnaire, y = score, group = ID)) + geom_point(size = 2)+ geom_line(size = 1.5) +
scale_x_discrete(expand = c(0,0),
labels = c("Cognitive anxiety",
"Somatic anxiety",
"Intolerance to uncertainty",
"Depression",
"Positive symptoms of psychosis",
"Negative symptoms of psychosis",
"ADHD",
"Negative affect",
"Externalising",
"Rumination",
"Autism",
""))+
coord_polar(theta = "x", direction=1, clip = "off") +
theme_minimal(base_size = 18)+
labs(title = "Psychiatric questionnaire scores of GPT-3",
x = element_blank(),
y = element_blank())+
theme(axis.text.y = element_blank())+
ylim(2, max(df$score))
12*20
11.99+13.99
747.89/6
952+491
(26+31+300+(65.76-2.89-7.99-0.5-1.19-1.99-2.69-1.19-1.29))
(26+31+300+(65.76-2.89-7.99-0.5-1.19-1.99-2.69-1.19-1.29))/5
(26+31+300+(65.76-2.89-7.99-0.5-1.19-1.99-2.69-1.19-1.29))/5 -36
(26+31+300+(65.76-2.89-7.99-0.5-1.19-1.99-2.69-1.19-1.29))/5 -(36 - 36/5)
ausgaben = (26+31+300+(65.76-2.89-7.99-0.5-1.19-1.99-2.69-1.19-1.29)) + 36
pp = ausgaben/5
pp - 36
pp - 36 + 2*pp
ausgaben - 2*pp
403.03 - 2*pp
EUR 72.91572000000001 - 48
72.91572000000001 - 48
205 * 20 * 10 + 20340
orig = 350*20*10
brief = 205*20*10
90340 + 20*3470
61340 + 20*3470
61340 + 20*2620
61340 + 20*1630
90340 + 20*2620
90340 + 20* 1630
90340 + 159740
90340 + 142740
90340 + 122940
61340 + 130740
61340 + 13074
61340 + 113740
61340 + 93940
20340 + 250080
20340 + 233080
20340 + 213280
20340 + 192080
20340 + 175080
20340 + 155280
p = 0.03/1000
270420 *p
159740*200
159740 / 200
253420 *p
233620 *p
212420 *p
195420 *p
175620 *p
57*6*30
v1a = 3470*20
orig = 350*30*6
brief = 205 * 30 *6
v1a = 347 * 30*6
v1b = 262 * 30*6
v2 = 163*30*6
10260*3 + orig*2 + v1a
219240 *p
10260*3 + orig*2 + v1b
10260*3 + orig*2 + v2
10260*3 + brief*2 + v2
10260*3 + brief*2 + v1b
10260*3 + brief*2 + v1a
# check out parameter estimates from model fitting
library(ggplot2)
theme_set(theme_classic(base_size = 14))
library(ggpubr)
library(RColorBrewer)
library(plyr)
red <- brewer.pal(12,"Paired")[6]
darkBlue <-  brewer.pal(12,"Paired")[2]
se<-function(x){sd(x)/sqrt(length(x))}
estimates <- read.csv("/Users/kwitte/Library/CloudStorage/OneDrive-Personal/CPI/safeExploration/dataAnalysis/modelFitting/results/model_fitting/ucb_lcb_n_master/estimates.csv")
# check out parameter estimates from model fitting
library(ggplot2)
theme_set(theme_classic(base_size = 14))
library(ggpubr)
library(RColorBrewer)
library(plyr)
red <- brewer.pal(12,"Paired")[6]
darkBlue <-  brewer.pal(12,"Paired")[2]
se<-function(x){sd(x)/sqrt(length(x))}
estimates$kraken_present <- factor(estimates$kraken_present, levels = c(0, 1), labels = c("safe", "risky"))
# beta
p5 <- ggplot(estimates, aes(x = beta, fill = kraken_present, group = kraken_present)) + geom_density(alpha = 0.6) +
geom_jitter(aes(x = beta, y = -0.2, color = kraken_present), height = 0.04, alpha = 0.3)+
geom_errorbar(data = estimates[estimates$kraken_present == "safe", ], aes(xmin = mean(beta) - 1.96*se(beta), xmax = mean(beta) + 1.96*se(beta), y = 0, width = 0.8), color = darkBlue, size = 1) +
geom_errorbar(data = estimates[estimates$kraken_present == "risky", ], aes(xmin = mean(beta) - 1.96*se(beta), xmax = mean(beta) + 1.96*se(beta), y = 0, width = 0.8), color = red, size = 1) +
geom_point(data = estimates[estimates$kraken_present == "safe", ],aes(x = mean(beta), y = 0), color = darkBlue, size = 2, show.legend = F) +
geom_point(data = estimates[estimates$kraken_present == "risky", ],aes(x = mean(beta), y = 0), color = red, size = 2, show.legend = F) +
geom_vline(xintercept = 0, linetype = "dashed")+
scale_fill_manual(values = c(darkBlue, red), name = "Condition") +
scale_color_manual(values = c(darkBlue, red), name = "Condition") +
scale_x_continuous(name = expression(beta))+
labs(title = expression(beta ~ "estimates"), y = "Density")
p6 <- ggplot(estimates, aes(x = ls, fill = kraken_present, group = kraken_present)) + geom_density(alpha = 0.6) +
geom_jitter(aes(x = ls, y = -0.2, color = kraken_present), height = 0.04, alpha = 0.3)+
geom_errorbar(data = estimates[estimates$kraken_present == "safe", ], aes(xmin = mean(ls) - 1.96*se(ls), xmax = mean(ls) + 1.96*se(ls), y = 0, width = 0.2), color = darkBlue, size = 1) +
geom_errorbar(data = estimates[estimates$kraken_present == "risky", ], aes(xmin = mean(ls) - 1.96*se(ls), xmax = mean(ls) + 1.96*se(ls), y = 0, width = 0.2), color = red, size = 1) +
geom_point(data = estimates[estimates$kraken_present == "safe", ],aes(x = mean(ls), y = 0), color = darkBlue, size = 2, show.legend = F) +
geom_point(data = estimates[estimates$kraken_present == "risky", ],aes(x = mean(ls), y = 0), color = red, size = 2, show.legend = F) +
scale_fill_manual(values = c(darkBlue, red), name = "Condition") +
scale_color_manual(values = c(darkBlue, red), name = "Condition") +
scale_x_continuous(name = expression(lambda))+
labs(title = expression(lambda ~ "estimates"), y = "Density")
p7 <- ggplot(estimates, aes(x = tau, fill = kraken_present, group = kraken_present)) + geom_density(alpha = 0.6) +
geom_jitter(aes(x = tau, y = -2, color = kraken_present), height = 2, alpha = 0.3)+
geom_errorbar(data = estimates[estimates$kraken_present == "safe", ], aes(xmin = mean(tau) - 1.96*se(tau), xmax = mean(tau) + 1.96*se(tau), y = 0, width = 5), color = darkBlue, size = 1) +
geom_errorbar(data = estimates[estimates$kraken_present == "risky", ], aes(xmin = mean(tau) - 1.96*se(tau), xmax = mean(tau) + 1.96*se(tau), y = 0, width = 5), color = red, size = 1) +
geom_point(data = estimates[estimates$kraken_present == "safe", ],aes(x = mean(tau), y = 0), color = darkBlue, size = 2, show.legend = F) +
geom_point(data = estimates[estimates$kraken_present == "risky", ],aes(x = mean(tau), y = 0), color = red, size = 2, show.legend = F) +
scale_fill_manual(values = c(darkBlue, red), name = "Condition")+
scale_color_manual(values = c(darkBlue, red), name = "Condition") +
scale_x_continuous(name = expression(tau))+
labs(title = expression(tau ~ "estimates"), y = "Density")
ggarrange(p5, p6, p7, ncol = 1, nrow= 3)
library(tidyverse)
library(ggplot2)
library(jsonlite)
library(brms)
theme_set(theme_classic(base_size = 14))
setwd("/Users/kwitte/Documents/GitHub/exploration-psychometrics")
load("data/pilot/bandits.Rda")
se<-function(x){sd(x, na.rm = T)/sqrt(length(na.omit(x)))}
meann <- function(x){mean(x, na.rm = T)}
############### Horizon task ############
############# prep data
horizon$mean_L <- NA
horizon$mean_R <- NA
horizon$row <- 1:nrow(horizon)
horizon$mean_L[horizon$trial == 5] <- apply(as.array(horizon$row[horizon$trial == 5]), 1, function(x) meann(horizon$reward[horizon$ID == horizon$ID[x]&
horizon$block == horizon$block[x] &
horizon$chosen == 0 &
horizon$trial < 5]))
horizon$mean_R[horizon$trial == 5] <- apply(as.array(horizon$row[horizon$trial == 5]), 1, function(x) meann(horizon$reward[horizon$ID == horizon$ID[x]&
horizon$block == horizon$block[x] &
horizon$chosen == 1&
horizon$trial < 5]))
## calculate deltas
horizon$delta_mean <- horizon$mean_L - horizon$mean_R
##### bayesian mean and variance
bayIncrAtOnce <- function(x){
left <- horizon$reward[horizon$ID == horizon$ID[x]&
horizon$block == horizon$block[x] &
horizon$chosen == 0&
horizon$trial < 5]
right <- horizon$reward[horizon$ID == horizon$ID[x]&
horizon$block == horizon$block[x] &
horizon$chosen == 1&
horizon$trial < 5]
# initialise prior
muLeft <- 50
muRight <- 50
alphaLeft <- 0.001 # where did this come from?
alphaRight <- 0.001
betaLeft <- 200
betaRight <- 200
nzero <-  0.01 # weighting of prior vs posterior, if same number as number of observations -> equal
# updating left
# taken from section 3 of: https://people.eecs.berkeley.edu/~jordan/courses/260-spring10/lectures/lecture5.pdf
alphaLeft <- alphaLeft+ length(left)/2 # increased precision bc more info
betaLeft <- betaLeft + 0.5*ifelse(length(left)>1, var(left),0) + (length(left)*nzero/2*(length(left)+nzero)) *  (mean(left) - muLeft)^2 # decreased precision bc info has variance
tauLeft <- length(left) * qgamma(.5, alphaLeft, betaLeft) + nzero * qgamma(.5, alphaLeft, betaLeft)
muLeft <- ((length(left)*tauLeft)/((length(left)*tauLeft) + nzero*tauLeft)) * mean(left) + ((nzero * tauLeft) / ((length(left)*tauLeft) + nzero* tauLeft)) * muLeft
# updating right
alphaRight <- alphaRight+ length(right)/2
betaRight <- betaRight + 0.5*ifelse(length(right)>1, var(right),0) + (length(right)*nzero/2*(length(right)+nzero)) *  (mean(right) - muRight)^2
tauRight <- length(right) * qgamma(.5, alphaRight, betaRight) + nzero * qgamma(.5, alphaRight, betaRight)
muRight <- ((length(right)*tauRight)/((length(right)*tauRight) + nzero*tauRight)) * mean(right) + ((nzero * tauRight) / ((length(right)*tauRight) + nzero* tauRight)) * muRight
return(c(muLeft,muRight,sqrt(1/tauLeft), sqrt(1/tauRight)))
}
horizon$bayMeanL <- NA
horizon$bayMeanR <- NA
horizon$bayVarL <- NA
horizon$bayVarR <- NA
for (i in horizon$row[horizon$trial == 5]){
horizon[horizon$row == i, grep("bay", colnames(horizon))] <- bayIncrAtOnce(i)
}
##################### Hierachical Bayesian Implementation of Standard Wilson model ##########
data <- horizon
baymodel <- brm(chosen ~ delta_mean*Horizon + info*Horizon + (info*Horizon+ delta_mean*Horizon| ID), family = "bernoulli",
data = data[data$trial == 5, ],
chains = 2,
cores = 2,
iter = 10000)
baymodelReduced <- brm(chosen ~ delta_mean*Horizon + info*Horizon + (info:Horizon + delta_mean:Horizon| ID), family = "bernoulli",
data = data[data$trial == 5, ],
chains = 2,
cores = 2,
iter = 10000)

fit_rug <- sem(simple_model, data = data)
summ <- summary(fit_rug, fit.measures = TRUE, standardized = TRUE)
summ
summ$fit
# plot results
lavaanPlot(
fit_rug, coefs = TRUE, covs = TRUE, sig = TRUE, stars = "covs",
stand = TRUE,
edge_options = list(color = "grey"),
node_options = list(shape = "box", fontname = "Helvetica")
)
### medium separtion
medium_model <- '
mood =~ PANAS_0 + PANAS_1 + PANAS_2 + PANAS_3 + PANAS_4 + PANAS_5 + PANAS_6 +
PANAS_7 + PANAS_8 + PANAS_9 + PANAS_10 + PANAS_11 + PANAS_12 + PANAS_13 +
PANAS_14 + PANAS_15 + PANAS_16 + PANAS_17 + PANAS_18 + PANAS_19
anxDepr =~ STICSA_0 +  STICSA_1 + STICSA_2 + STICSA_3 + STICSA_4 + STICSA_5 + STICSA_6 + STICSA_7 +
STICSA_8 + STICSA_10 + STICSA_11 + STICSA_12 + STICSA_13 + STICSA_14 + STICSA_15 +
STICSA_16 + STICSA_17 + STICSA_18 + STICSA_19 + STICSA_20 + STICSA_21 + PHQ_9_0 +
PHQ_9_1 + PHQ_9_2 + PHQ_9_3 + PHQ_9_4 + PHQ_9_5 + PHQ_9_7 + PHQ_9_8 + PHQ_9_9
Exp =~ BIG_5_0 + BIG_5_1 + BIG_5_2 + BIG_5_3 + BIG_5_4 + BIG_5_5 + CEI_0 +
CEI_1 + CEI_2 + CEI_3
'
fit_rug_mid <- sem(medium_model, data = data)
summ <- summary(fit_rug_mid, fit.measures = TRUE, standardized = TRUE)
#summ
summ$fit
# plot results
lavaanPlot(
fit_rug, coefs = TRUE, covs = TRUE, sig = TRUE, stars = "covs",
stand = TRUE,
edge_options = list(color = "grey"),
node_options = list(shape = "box", fontname = "Helvetica")
)
## more complex model
# reload data to have the positive mood items not be reversed anymore
data <- read.csv("analysis/dat_for_efa_s2.csv")
data <- data%>%
select(-c(ID, X))
seperate_scales <- '
AxDep =~ STICSA_0 +
STICSA_1 + STICSA_2 + STICSA_3 + STICSA_4 + STICSA_5 + STICSA_6 + STICSA_7 +
STICSA_8 + STICSA_10 + STICSA_11 + STICSA_12 + STICSA_13 + STICSA_14 + STICSA_15 +
STICSA_16 + STICSA_17 + STICSA_18 + STICSA_19 + STICSA_20 + STICSA_21 + PHQ_9_0 +
PHQ_9_1 + PHQ_9_2 + PHQ_9_3 + PHQ_9_4 + PHQ_9_5 + PHQ_9_7 + PHQ_9_8 + PHQ_9_9
negMood =~ PANAS_1 + PANAS_3 +  PANAS_5 + PANAS_6 +
PANAS_7 + PANAS_10 +  PANAS_12 + PANAS_13 +
PANAS_14 + PANAS_17 +  PANAS_19
posMood =~ PANAS_0 + PANAS_2+  PANAS_4 + PANAS_8 + PANAS_9+  PANAS_11+
PANAS_13+ PANAS_15+ PANAS_16+ PANAS_18
Exp =~ BIG_5_0 + BIG_5_1 + BIG_5_2 + BIG_5_3 + BIG_5_4 + BIG_5_5 + CEI_0 +
CEI_1 + CEI_2 + CEI_3
'
fit_rug_sep <- sem(seperate_scales, data = data)
summ <- summary(fit_rug_sep, fit.measures = TRUE, standardized = TRUE)
summ$fit
# plot results
lavaanPlot(
fit_rug_sep, coefs = TRUE, covs = TRUE, sig = TRUE, stars = "covs",
stand = TRUE,
edge_options = list(color = "grey"),
node_options = list(shape = "box", fontname = "Helvetica")
)
# plot results
lavaanPlot(
fit_rug_mid, coefs = TRUE, covs = TRUE, sig = TRUE, stars = "covs",
stand = TRUE,
edge_options = list(color = "grey"),
node_options = list(shape = "box", fontname = "Helvetica")
)
summ <- summary(fit_rug, fit.measures = TRUE, standardized = TRUE)
summ$fit
summ <- summary(fit_rug_mid, fit.measures = TRUE, standardized = TRUE)
#summ
summ$fit
summ <- summary(fit_rug_sep, fit.measures = TRUE, standardized = TRUE)
summ$fit
cors <- read.csv("analysis/behavioral-tasks-latents-s2.csv") %>%
mutate(ID = c(2, 3, 4, 6, 7 , 10 , 11  ,12 , 13  ,14,  16 , 20  ,21 , 23 , 24,
25,  26 , 27 , 28 , 29 , 31 , 32 , 33 , 34 , 35 , 36 , 37,  40  ,
48 , 49,  52  ,55 , 56,  59 , 60 , 61 , 63 , 65 , 69 , 71,
72 , 73 , 74 , 76 , 77 , 78,  79 , 83  ,84  ,85 , 90 , 93,  94 ,
95,  96 , 97,  98  ,99 ,100, 101 ,102 ,103 ,105 ,108 ,109, 110,
113 ,114, 117, 118, 119, 120, 122, 123, 124, 125, 128 ,129, 131, 132,
133, 134, 135, 137, 142, 149 ,151, 154, 162, 163, 165, 166, 168 ,169,
170 ,171 ,172, 175 ,176, 180 ,182 ,183, 185, 187 ,188 ,190, 193 ,195,
197, 198 ,199, 200 ,202 ,203, 204, 205, 206, 207, 208, 209,
213 ,216 ,219, 220, 222, 229 ,232, 233, 239, 243, 244, 245, 246 ,251,
254, 261 ,262, 269, 270, 271, 273, 274 ,276 ,279, 284, 288, 290 ,291,
294 ,297, 298 ,299 ,302 ,303 ,306, 308, 309, 313, 316, 317,
320, 322, 323, 324, 325, 326, 332, 333, 338 ,343, 346, 347, 349, 351, 352)) %>%
left_join(read.csv("analysis/questionnaire_factors_s2.csv") %>% select(-X), by = "ID") %>%
select(-c(ID)) %>%
cor(use = "pairwise.complete.obs") %>%
as.data.frame() %>%
mutate(x = rownames(.)) %>%
pivot_longer(cols = -c(x), names_to = "y", values_to = "cor")
ggplot(cors, aes(y, x, fill = cor)) + geom_raster() +
scale_fill_gradient2(high = "#66C2A5", low = "#FC8D62", mid = "white", limits = c(-1,1))+
geom_label(aes(label = round(cor, digits = 2)), fill = "white") +
labs(title = "External validity on the latent level",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))
View(cors)
cors <- read.csv("analysis/behavioral-tasks-latents-s2.csv") %>%
mutate(ID = c(2, 3, 4, 6, 7 , 10 , 11  ,12 , 13  ,14,  16 , 20  ,21 , 23 , 24,
25,  26 , 27 , 28 , 29 , 31 , 32 , 33 , 34 , 35 , 36 , 37,  40  ,
48 , 49,  52  ,55 , 56,  59 , 60 , 61 , 63 , 65 , 69 , 71,
72 , 73 , 74 , 76 , 77 , 78,  79 , 83  ,84  ,85 , 90 , 93,  94 ,
95,  96 , 97,  98  ,99 ,100, 101 ,102 ,103 ,105 ,108 ,109, 110,
113 ,114, 117, 118, 119, 120, 122, 123, 124, 125, 128 ,129, 131, 132,
133, 134, 135, 137, 142, 149 ,151, 154, 162, 163, 165, 166, 168 ,169,
170 ,171 ,172, 175 ,176, 180 ,182 ,183, 185, 187 ,188 ,190, 193 ,195,
197, 198 ,199, 200 ,202 ,203, 204, 205, 206, 207, 208, 209,
213 ,216 ,219, 220, 222, 229 ,232, 233, 239, 243, 244, 245, 246 ,251,
254, 261 ,262, 269, 270, 271, 273, 274 ,276 ,279, 284, 288, 290 ,291,
294 ,297, 298 ,299 ,302 ,303 ,306, 308, 309, 313, 316, 317,
320, 322, 323, 324, 325, 326, 332, 333, 338 ,343, 346, 347, 349, 351, 352)) %>%
left_join(read.csv("analysis/questionnaire_factors_s2.csv") %>% select(-X), by = "ID") %>%
select(-c(ID)) %>%
cor(use = "pairwise.complete.obs") %>%
as.data.frame() %>%
mutate(x = rownames(.)) %>%
pivot_longer(cols = -c(x), names_to = "y", values_to = "cor") %>%
mutate(x = factor(x, levels = c("G.Value.Guided", "G.Directed", "Exp", "posMood", "negMood", "AnxDep", "WMC"),
labels = c("Value-guided", "Directed", "Self-reported exploration", "Positive mood", "Negative mood", "Anxiety/depression", "Working memory")),
y = factor(y, levels = c("WMC", "AnxDep", "negMood", "posMood", "Exp", "G.Directed", "G.Value.Guided"),
labels = c("Working memory", "Anxiety/depression", "Negative mood", "Positive mood", "Self-reported exploration", "Directed", "Value-guided")))
ggplot(cors, aes(y, x, fill = cor)) + geom_raster() +
scale_fill_gradient2(high = "#66C2A5", low = "#FC8D62", mid = "white", limits = c(-1,1))+
geom_label(aes(label = round(cor, digits = 2)), fill = "white") +
labs(title = "External validity on the latent level",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))
cors <- read.csv("analysis/behavioral-tasks-latents-s2.csv") %>%
mutate(ID = c(2, 3, 4, 6, 7 , 10 , 11  ,12 , 13  ,14,  16 , 20  ,21 , 23 , 24,
25,  26 , 27 , 28 , 29 , 31 , 32 , 33 , 34 , 35 , 36 , 37,  40  ,
48 , 49,  52  ,55 , 56,  59 , 60 , 61 , 63 , 65 , 69 , 71,
72 , 73 , 74 , 76 , 77 , 78,  79 , 83  ,84  ,85 , 90 , 93,  94 ,
95,  96 , 97,  98  ,99 ,100, 101 ,102 ,103 ,105 ,108 ,109, 110,
113 ,114, 117, 118, 119, 120, 122, 123, 124, 125, 128 ,129, 131, 132,
133, 134, 135, 137, 142, 149 ,151, 154, 162, 163, 165, 166, 168 ,169,
170 ,171 ,172, 175 ,176, 180 ,182 ,183, 185, 187 ,188 ,190, 193 ,195,
197, 198 ,199, 200 ,202 ,203, 204, 205, 206, 207, 208, 209,
213 ,216 ,219, 220, 222, 229 ,232, 233, 239, 243, 244, 245, 246 ,251,
254, 261 ,262, 269, 270, 271, 273, 274 ,276 ,279, 284, 288, 290 ,291,
294 ,297, 298 ,299 ,302 ,303 ,306, 308, 309, 313, 316, 317,
320, 322, 323, 324, 325, 326, 332, 333, 338 ,343, 346, 347, 349, 351, 352)) %>%
left_join(read.csv("analysis/questionnaire_factors_s2.csv") %>% select(-X), by = "ID") %>%
select(-c(ID)) %>%
cor(use = "pairwise.complete.obs") %>%
as.data.frame() %>%
mutate(x = rownames(.)) %>%
pivot_longer(cols = -c(x), names_to = "y", values_to = "cor")
ggplot(cors, aes(y, x, fill = cor)) + geom_raster() +
scale_fill_gradient2(high = "#66C2A5", low = "#FC8D62", mid = "white", limits = c(-1,1))+
geom_label(aes(label = round(cor, digits = 2)), fill = "white") +
labs(title = "External validity on the latent level",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))
cors <- read.csv("analysis/behavioral-tasks-latents-s2.csv") %>%
mutate(ID = c(2, 3, 4, 6, 7 , 10 , 11  ,12 , 13  ,14,  16 , 20  ,21 , 23 , 24,
25,  26 , 27 , 28 , 29 , 31 , 32 , 33 , 34 , 35 , 36 , 37,  40  ,
48 , 49,  52  ,55 , 56,  59 , 60 , 61 , 63 , 65 , 69 , 71,
72 , 73 , 74 , 76 , 77 , 78,  79 , 83  ,84  ,85 , 90 , 93,  94 ,
95,  96 , 97,  98  ,99 ,100, 101 ,102 ,103 ,105 ,108 ,109, 110,
113 ,114, 117, 118, 119, 120, 122, 123, 124, 125, 128 ,129, 131, 132,
133, 134, 135, 137, 142, 149 ,151, 154, 162, 163, 165, 166, 168 ,169,
170 ,171 ,172, 175 ,176, 180 ,182 ,183, 185, 187 ,188 ,190, 193 ,195,
197, 198 ,199, 200 ,202 ,203, 204, 205, 206, 207, 208, 209,
213 ,216 ,219, 220, 222, 229 ,232, 233, 239, 243, 244, 245, 246 ,251,
254, 261 ,262, 269, 270, 271, 273, 274 ,276 ,279, 284, 288, 290 ,291,
294 ,297, 298 ,299 ,302 ,303 ,306, 308, 309, 313, 316, 317,
320, 322, 323, 324, 325, 326, 332, 333, 338 ,343, 346, 347, 349, 351, 352)) %>%
left_join(read.csv("analysis/questionnaire_factors_s2.csv") %>% select(-X), by = "ID") %>%
select(-c(ID)) %>%
cor(use = "pairwise.complete.obs") %>%
as.data.frame() %>%
mutate(x = rownames(.)) %>%
pivot_longer(cols = -c(x), names_to = "y", values_to = "cor") %>%
mutate(x = factor(x, levels = c("G.Value.Guided", "G.Directed", "Exp", "posMood", "negMood", "AxDep", "WMC"),
labels = c("Value-guided", "Directed", "Self-reported exploration", "Positive mood", "Negative mood", "Anxiety/depression", "Working memory")),
y = factor(y, levels = c("WMC", "AxDep", "negMood", "posMood", "Exp", "G.Directed", "G.Value.Guided"),
labels = c("Working memory", "Anxiety/depression", "Negative mood", "Positive mood", "Self-reported exploration", "Directed", "Value-guided")))
ggplot(cors, aes(y, x, fill = cor)) + geom_raster() +
scale_fill_gradient2(high = "#66C2A5", low = "#FC8D62", mid = "white", limits = c(-1,1))+
geom_label(aes(label = round(cor, digits = 2)), fill = "white") +
labs(title = "External validity on the latent level",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))
ggplot(cors, aes(x,y, fill = cor)) + geom_raster() +
scale_fill_gradient2(high = "#66C2A5", low = "#FC8D62", mid = "white", limits = c(-1,1))+
geom_label(aes(label = round(cor, digits = 2)), fill = "white") +
labs(title = "External validity on the latent level",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))
######## fit models ##########
rm(list = ls())
library(tidyverse)
library(ggplot2)
#library(jsonlite)
library(brms)
library(here)
theme_set(theme_classic(base_size = 14))
here()
############### Horizon task ############
horizon <- load_and_prep_bandit_data(session)$horizon
here()
library(here)
theme_set(theme_classic(base_size = 14))
session <- 1
source("analysis/recovery_utils.R")
se<-function(x){sd(x, na.rm = T)/sqrt(length(na.omit(x)))}
meann <- function(x){mean(x, na.rm = T)}
############### Horizon task ############
horizon <- load_and_prep_bandit_data(session)$horizon
res_list3 <- recovery_horizon(horizon[horizon$Horizon == 0.5, ], "Wilson", full = T, it = 8000, save = T, bayesian = T, no_horizon = T, no_intercept = F, use_saved = T)
res_list3
true_short <- res_list_short[[1]]
## Horizon task
horizon <- load_and_prep_bandit_data(session = 1)$horizon
res_list_short <- recovery_horizon(horizon[horizon$Horizon == -0.5, ], "Wilson", full = T, it = 8000, save = T, bayesian = T, no_horizon = T, no_intercept = F, use_saved = T)
res_list_long <- recovery_horizon(horizon[horizon$Horizon == 0.5, ], "Wilson", full = T, it = 8000, save = T, bayesian = T, no_horizon = T, no_intercept = F, use_saved = T)
true_short <- res_list_short[[1]]
View(true_short)
recovered_short <- res_list_short[[2]]
true_short <- res_list_short[[1]]
recovered_short <- res_list_short[[2]]
true_long <- res_list_long[[1]]
recovered_long <- res_list_long[[2]]
file_loc_hc_s1 <- "data/restless-hierarchical-model-posterior-s1.RDS"
horizon <- load_and_prep_bandit_data(session = 1)$horizon
res_list_short <- recovery_horizon(horizon[horizon$Horizon == -0.5, ], "Wilson", full = T, it = 8000, save = T, bayesian = T, no_horizon = T, no_intercept = F, use_saved = T)
res_list_long <- recovery_horizon(horizon[horizon$Horizon == 0.5, ], "Wilson", full = T, it = 8000, save = T, bayesian = T, no_horizon = T, no_intercept = F, use_saved = T)
true_short <- res_list_short[[1]]
recovered_short <- res_list_short[[2]]
true_long <- res_list_long[[1]]
recovered_long <- res_list_long[[2]]
# Function to prepare parameters
prepare_params <- function(trueParams1, trueParams2) {
trueParams <- trueParams1 %>%
mutate(ID = parse_number(rownames(.))) %>%
left_join(trueParams2 %>% mutate(ID = parse_number(rownames(.))), by = c("ID", "predictor")) %>%
mutate(estimate = estimate.y - estimate.x)
return(trueParams)
}
# Prepare true and recovered parameters
trueParams <- prepare_params(true_short, true_long)
View(trueParams)
recoveredParams <- prepare_params(recovered_short, recovered_long)
# Calculate correlations
params <- unique(trueParams$predictor)
cors <- expand.grid(true = params, recovered = params)
cors$cor <- mapply(function(t, r) cor(trueParams$estimate[trueParams$predictor == t], recoveredParams$estimate[recoveredParams$predictor == r]), cors$true, cors$recovered)
View(cors)
cors <- cors %>%
mutate(recovered = factor(recovered, levels = c("info", "delta_mean", "Intercept"),
labels = c("Directed", "Value-guided", "Intercept")),
true = factor(true, levels = c("Intercept", "delta_mean", "info"),
labels = c("Intercept", "Value-guided", "Directed")))
heatmap <- function(x = x, y = y, limits = c(-1,1)){
ggplot(cors, aes(x = x, y = y, fill = cor)) + geom_raster() +
scale_fill_gradient2(high = "#66C2A5", low = "#FC8D62", mid = "white", limits = limits)+
geom_label(aes(label = round(cor, digits = 2)), fill = "white")
}
heatmap <- function(df, x = x, y = y, limits = c(-1,1)){
ggplot(df, aes(x = x, y = y, fill = cor)) + geom_raster() +
scale_fill_gradient2(high = "#66C2A5", low = "#FC8D62", mid = "white", limits = limits)+
geom_label(aes(label = round(cor, digits = 2)), fill = "white")
}
p1 <- heatmap(cors, x = true, y = recovered)
p1
p1 <- heatmap(cors, x = cors$true, y = cors$recovered)
p1
p1 <- heatmap(cors, x = cors$true, y = cors$recovered) +
labs(title = "Recovery of Horizon task",
x = "Fitted parameters",
y = "Recovered parameters")
p1
ggsave("plots/submission1/recovery_horizon_default.png", p1)
## two-armed bd ------------------------------------
res_list1 <- recovery_sam(sam, "hybrid", hierarchical = T, it = 8000, no_intercept = F, save = T, use_saved = T, iterative = F)
res_list1
## two-armed bd ------------------------------------
sam <- load_and_prep_bandit_data(session)$sam
res_list1 <- recovery_sam(sam, "hybrid", hierarchical = T, it = 8000, no_intercept = F, save = T, use_saved = T, iterative = F)
res_list1
load("analysis/bandits/modellingResults/recoverySamSession1hybrid_hierarchical_notIterative.Rda")
View(cors)
View(cors)
## two-armed bd ------------------------------------
sam <- load_and_prep_bandit_data(session)$sam
load("analysis/bandits/modellingResults/recoverySamSession1hybrid_hierarchical_notIterative.Rda")
cors <- cors %>%
mutate(recovered = factor(recovered, levels = c("VTU", "RU", "V", "Intercept"),
labels = c("Random","Directed", "Value-guided", "Intercept")),
true = factor(true, levels = c("Intercept", "V", "RU", "VTU"),
labels = c("Intercept", "Value-guided", "Directed", "Random")))
p1 <- heatmap(cors, x = cors$true, y = cors$recovered) +
labs(title = "Recovery of two-armed bandit task",
x = "Fitted parameters",
y = "Recovered parameters")
p1
ggsave("plots/submission1/recovery_2ab_default.png", p1)
rm(list = ls())
library(grid)
library(gridExtra)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(brms)
library(here)
theme_set(theme_bw(base_size = 14))
source("analysis/recovery_utils.R")
se<-function(x){sd(x, na.rm = T)/sqrt(length(na.omit(x)))}
meann <- function(x){mean(x, na.rm = T)}
dirs_homegrown <- c(
"utils/analysis-utils.R", "utils/plotting-utils.R",
"utils/modeling-utils.R"
)
walk(dirs_homegrown, source)
horizon <- load_and_prep_bandit_data(session = 1)$horizon
res_list_short <- recovery_horizon(horizon[horizon$Horizon == -0.5, ], "Wilson", full = T, it = 8000, save = T, bayesian = T, no_horizon = T, no_intercept = F, use_saved = T)
res_list_long <- recovery_horizon(horizon[horizon$Horizon == 0.5, ], "Wilson", full = T, it = 8000, save = T, bayesian = T, no_horizon = T, no_intercept = F, use_saved = T)
true_short <- res_list_short[[1]]
recovered_short <- res_list_short[[2]]
true_long <- res_list_long[[1]]
recovered_long <- res_list_long[[2]]
# Function to prepare parameters
prepare_params <- function(trueParams1, trueParams2) {
trueParams <- trueParams1 %>%
mutate(ID = parse_number(rownames(.))) %>%
left_join(trueParams2 %>% mutate(ID = parse_number(rownames(.))), by = c("ID", "predictor")) %>%
mutate(estimate = estimate.y - estimate.x)
return(trueParams)
}
# Prepare true and recovered parameters
trueParams <- prepare_params(true_short, true_long)
recoveredParams <- prepare_params(recovered_short, recovered_long)
# Calculate correlations
params <- unique(trueParams$predictor)
cors <- expand.grid(true = params, recovered = params)
cors$cor <- mapply(function(t, r) cor(trueParams$estimate[trueParams$predictor == t], recoveredParams$estimate[recoveredParams$predictor == r]), cors$true, cors$recovered)
cors <- cors %>%
mutate(recovered = factor(recovered, levels = c("info", "delta_mean", "Intercept"),
labels = c("Directed", "Value-guided", "Intercept")),
true = factor(true, levels = c("Intercept", "delta_mean", "info"),
labels = c("Intercept", "Value-guided", "Directed")))
p1 <- heatmap(cors, x = cors$true, y = cors$recovered) +
labs(title = "Recovery of Horizon task",
x = "Fitted parameters",
y = "Recovered parameters")
p1
sam <- load_and_prep_bandit_data(session = 1)$sam
load("analysis/bandits/modellingResults/recoverySamSession1hybrid_hierarchical_notIterative.Rda")
cors <- cors %>%
mutate(recovered = factor(recovered, levels = c("VTU", "RU", "V", "Intercept"),
labels = c("Random","Directed", "Value-guided", "Intercept")),
true = factor(true, levels = c("Intercept", "V", "RU", "VTU"),
labels = c("Intercept", "Value-guided", "Directed", "Random")))
p1 <- heatmap(cors, x = cors$true, y = cors$recovered) +
labs(title = "Recovery of two-armed bandit task",
x = "Fitted parameters",
y = "Recovered parameters")
p1
cors <- readRDS("analysis/bandits/allParams.Rds") %>%
subset(predictor != "Intercept" & session == 1) %>%
mutate(predictor = recode(predictor,
"V" = "Value-guided",
"RU" = "Directed",
"VTU" = "Random",
"delta_mean" = "Value-guided",
"info" = "Directed"),
task = recode(task, "sam" = "Two-armed",
"horizon" = "Horizon",
"restless" = "Restless"),
variable = paste(predictor, task)) %>%
pivot_wider(id_cols = "ID", names_from = "variable", values_from = "estimate") %>%
subset(select = -ID) %>%
cor(use="pairwise.complete.obs") %>%
as.data.frame() %>%
mutate(x = rownames(.)) %>%
pivot_longer(cols = -x, names_to = "y", values_to = "cor")
ggplot(cors, aes(y, x, fill = cor)) + geom_raster() +
scale_fill_gradient2(high = "#66C2A5", low = "#FC8D62", mid = "white", limits = c(-1,1))+
geom_label(aes(label = round(cor, digits = 2)), fill = "white") +
labs(title = "Convergent validity of parameter estimates",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))+
geom_hline(yintercept = 3.5, color = "white", size = 3)+
geom_hline(yintercept = 4.5, color = "white", size = 3)+
geom_vline(xintercept = 3.5, color = "white", size = 3)+
geom_vline(xintercept = 4.5, color = "white", size = 3)
cors <- readRDS("analysis/bandits/allParams.Rds") %>%
subset(predictor != "Intercept" & session == 1) %>%
mutate(predictor = recode(predictor,
"V" = "Value-guided",
"RU" = "Directed",
"VTU" = "Random",
"delta_mean" = "Value-guided",
"info" = "Directed"),
task = recode(task, "sam" = "Two-armed",
"horizon" = "Horizon",
"restless" = "Restless"),
variable = paste(predictor, task)) %>%
pivot_wider(id_cols = "ID", names_from = "variable", values_from = "estimate") %>%
subset(select = -ID) %>%
cor(use="pairwise.complete.obs") %>%
as.data.frame() %>%
mutate(x = rownames(.)) %>%
pivot_longer(cols = -x, names_to = "y", values_to = "cor") %>%
mutate(x = factor(x, levels = c("Value-guided Horizon", "Value-guided Two-armed", "Value-guided Restless",
"Directed Horizon", "Directed Two-armed", "Directed Restless",
"Random Two-armed"),
labels = c("Value-guided Horizon", "Value-guided Two-armed", "Value-guided Restless",
"Directed Horizon", "Directed Two-armed", "Directed Restless",
"Random Two-armed")),
y = factor(y, levels = c("Random Two-armed", "Directed Restless", "Directed Two-armed", "Directed Horizon",
"Value-guided Restless", "Value-guided Two-armed", "Value-guided Horizon")))
ggplot(cors, aes(y, x, fill = cor)) + geom_raster() +
scale_fill_gradient2(high = "#66C2A5", low = "#FC8D62", mid = "white", limits = c(-1,1))+
geom_label(aes(label = round(cor, digits = 2)), fill = "white") +
labs(title = "Convergent validity of parameter estimates",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))+
geom_hline(yintercept = 3.5, color = "white", size = 3)+
geom_hline(yintercept = 4.5, color = "white", size = 3)+
geom_vline(xintercept = 3.5, color = "white", size = 3)+
geom_vline(xintercept = 4.5, color = "white", size = 3)
ggplot(cors, aes(y, x, fill = cor)) + geom_raster() +
scale_fill_gradient2(high = "#66C2A5", low = "#FC8D62", mid = "white", limits = c(-1,1))+
geom_label(aes(label = round(cor, digits = 2)), fill = "white") +
labs(title = "Convergent validity of parameter estimates",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))+
geom_hline(yintercept = 6.5, color = "white", size = 3)+
geom_vline(xintercept = 6.5, color = "white", size = 3)
ggplot(cors, aes(x,y, fill = cor)) + geom_raster() +
scale_fill_gradient2(high = "#66C2A5", low = "#FC8D62", mid = "white", limits = c(-1,1))+
geom_label(aes(label = round(cor, digits = 2)), fill = "white") +
labs(title = "Convergent validity of parameter estimates",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))+
geom_hline(yintercept = 6.5, color = "white", size = 3)+
geom_vline(xintercept = 6.5, color = "white", size = 3)
ggplot(cors, aes(x,y, fill = cor)) + geom_raster() +
scale_fill_gradient2(high = "#66C2A5", low = "#FC8D62", mid = "white", limits = c(-1,1))+
geom_label(aes(label = round(cor, digits = 2)), fill = "white") +
labs(title = "Convergent validity of parameter estimates",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))+
geom_hline(yintercept = 0.5, color = "white", size = 3)+
geom_vline(xintercept = 6.5, color = "white", size = 3)
ggplot(cors, aes(x,y, fill = cor)) + geom_raster() +
scale_fill_gradient2(high = "#66C2A5", low = "#FC8D62", mid = "white", limits = c(-1,1))+
geom_label(aes(label = round(cor, digits = 2)), fill = "white") +
labs(title = "Convergent validity of parameter estimates",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))+
geom_hline(yintercept = 1.5, color = "white", size = 3)+
geom_vline(xintercept = 6.5, color = "white", size = 3)
ggplot(cors, aes(x,y, fill = cor)) + geom_raster() +
scale_fill_gradient2(high = "#66C2A5", low = "#FC8D62", mid = "white", limits = c(-1,1))+
geom_label(aes(label = round(cor, digits = 2)), fill = "white") +
labs(title = "Convergent validity of parameter estimates",
x = element_blank(), y = element_blank())+
theme(axis.text.x = element_text(angle = 30, hjust = 1))+
geom_hline(yintercept = 1.5, color = "white", size = 3)+
geom_hline(yintercept = 4.5, color = "white", size = 3)+
geom_vline(xintercept = 6.5, color = "white", size = 3)+
geom_vline(xintercept = 3.5, color = "white", size = 3)
ggsave("plots/submission1/convergent_validity_parameters.png")
## Horizon task -----------------------
horizon <- load_and_prep_bandit_data(session = 1)$horizon
res_list <- recovery_horizon(horizon[horizon$Horizon == 0.5, ], "Wilson", full = T, it = 8000, save = T, bayesian = T, no_horizon = T, no_intercept = F, use_saved = T)
true <- res_list[[1]]
recovered <- res_list[[2]]
View(true)
## Horizon task -----------------------
horizon <- load_and_prep_bandit_data(session = 1)$horizon
res_list <- recovery_horizon(horizon[horizon$Horizon == 0.5, ], "Wilson", full = T, it = 8000, save = T, bayesian = T, no_horizon = T, no_intercept = F, use_saved = T)
trueParams <- res_list[[1]]
recoveredParams <- res_list[[2]]
# Calculate correlations
params <- unique(trueParams$predictor)
cors <- expand.grid(true = params, recovered = params)
cors$cor <- mapply(function(t, r) cor(trueParams$estimate[trueParams$predictor == t], recoveredParams$estimate[recoveredParams$predictor == r]), cors$true, cors$recovered)
cors <- cors %>%
mutate(recovered = factor(recovered, levels = c("info", "delta_mean", "Intercept"),
labels = c("Directed", "Value-guided", "Intercept")),
true = factor(true, levels = c("Intercept", "delta_mean", "info"),
labels = c("Intercept", "Value-guided", "Directed")))
p1 <- heatmap(cors, x = cors$true, y = cors$recovered) +
labs(title = "Recovery of Horizon task",
x = "Fitted parameters",
y = "Recovered parameters")
p1
ggsave("plots/submission1/recovery_horizon_only_long.png", p1)
## two-armed bd ------------------------------------
sam <- load_and_prep_bandit_data(session = 1)$sam
load("analysis/bandits/modellingResults/recoverySamSession1UCB_hierarchical_notIterative.Rda")
cors <- cors %>%
mutate(recovered = factor(recovered, levels = c("RU", "V", "Intercept"),
labels = c("Directed", "Value-guided", "Intercept")),
true = factor(true, levels = c("Intercept", "V", "RU"),
labels = c("Intercept", "Value-guided", "Directed")))
p1 <- heatmap(cors, x = cors$true, y = cors$recovered) +
labs(title = "Recovery of two-armed bandit task",
x = "Fitted parameters",
y = "Recovered parameters")
p1
ggsave("plots/submission1/recovery_2ab_UCB.png", p1)
